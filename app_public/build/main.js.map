{"version":3,"sources":["./src/app/common/services/covid.service.ts","./src/app/common/pipes/cas.pipe.ts","./src/app/common/pipes/letters.pipe.ts","./src/app/common/components/profile/profile.component.ts","./src/app/common/components/profile/profile.component.html","./src/app/common/classes/cache.ts","./src/app/common/components/jobs/offers/offers.component.ts","./src/app/common/components/jobs/offers/offers.component.html","./src/app/common/pipes/sortiraj-sporocila.pipe.ts","./src/app/common/components/chat/sporocila/sporocila.component.ts","./src/app/common/components/chat/sporocila/sporocila.component.html","./src/app/common/components/instructions/instructors/instructors.component.ts","./src/app/common/components/instructions/instructors/instructors.component.html","./src/environments/environment.ts","./src/app/common/components/landing/landing.component.ts","./src/app/common/components/landing/landing.component.html","./src/app/common/components/dashboard/dashboard.component.ts","./src/app/common/components/dashboard/dashboard.component.html","./src/app/common/components/db/db.component.ts","./src/app/common/components/db/db.component.html","./src/app/common/components/footer/footer.component.ts","./src/app/common/components/instructions/event-new/event-new.component.ts","./src/app/common/components/instructions/event-new/event-new.component.html","./src/app/common/components/jobs/offer-new/offer-new.component.ts","./src/app/common/components/jobs/offer-new/offer-new.component.html","./src/app/common/components/login/login.component.ts","./src/app/common/components/login/login.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/common/components/messaging/messaging.component.ts","./src/app/common/components/messaging/messaging.component.html","./src/app/modules/app-routing/app-routing.module.ts","./src/app/common/services/jobs.service.ts","./src/app/common/components/main/main.component.ts","./src/app/common/components/main/main.component.html","./src/app/app.module.ts","./src/app/common/components/chat/kontakti/kontakti.component.ts","./src/app/common/components/chat/kontakti/kontakti.component.html","./src/app/common/services/comments.service.ts","./src/app/common/components/instructions/events/events.component.ts","./src/app/common/components/instructions/events/events.component.html","./src/app/common/services/chat.service.ts","./src/app/common/components/register/register.component.ts","./src/app/common/components/register/register.component.html","./src/app/common/components/jobs/offer-info/offer-info.component.ts","./src/app/common/components/jobs/offer-info/offer-info.component.html","./src/app/common/services/profil.service.ts","./src/app/common/components/get-started/get-started.component.ts","./src/app/common/components/get-started/get-started.component.html","./src/app/common/components/instructions/event-info/event-info.component.ts","./src/app/common/components/instructions/event-info/event-info.component.html","./src/app/common/services/instructions.service.ts","./src/app/common/components/komentarji/komentarji-seznam/komentarji-seznam.component.ts","./src/app/common/components/komentarji/komentarji-seznam/komentarji-seznam.component.html","./src/app/common/services/comments-jobs.service.ts","./src/app/common/services/authentication.service.ts","./src/app/common/components/komentarji/komentarji-seznam-dela/komentarji-seznam-dela.component.ts","./src/app/common/components/komentarji/komentarji-seznam-dela/komentarji-seznam-dela.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/common/components/navbar/navbar.component.ts","./src/app/common/components/navbar/navbar.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CovidService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private apiUrl: string = \"https://api.covid19api.com/total/country/slovenia/status/confirmed\";\r\n\r\n  public getCovidInfo(): Promise<any> {\r\n    const url: string = this.apiUrl;\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => {\r\n        //console.log(response);\r\n        return response as any;\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error: any): Promise<any> {\r\n    //console.error('Error in the service.', error.error[\"sporočilo\"] || error.error.errmsg || error.message || error);\r\n    //return Promise.reject(error.error[\"sporočilo\"] || error.error.errmsg || error.message || error);\r\n    return Promise.reject(error.error[\"sporočilo\"] || error.error.errmsg || error);\r\n    // console.error(\"Error in the service\");\r\n    // console.log(error);\r\n    // return Promise.reject(error.error);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'cas'\r\n})\r\nexport class CasPipe implements PipeTransform {\r\n\r\n  transform(cas: Date): String {\r\n    var date = new Date(cas);\r\n    var formatiranDatum = date.getHours() + ':' + (date.getMinutes() < 10? '0':'') + date.getMinutes();\r\n      \r\n    return formatiranDatum;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'letters'\r\n})\r\nexport class LettersPipe implements PipeTransform {\r\n\r\n  transform(vhod: string): string {\r\n    return vhod.charAt(0);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';// pridobimo trenutno pot v okviru komponente\r\nimport { User } from '../../classes/user';\r\nimport { Job } from '../../classes/job';\r\nimport { InstructionsEvent } from '../../classes/event';\r\nimport { ProfilService } from '../../services/profil.service'\r\nimport { switchMap } from 'rxjs/operators'; //za pridobitev vrednosti iz URL parametrov ter uporabi pri API klicu\r\nimport { AuthenticationService } from 'src/app/common/services/authentication.service';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { InstructionsService } from '../../services/instructions.service';\r\nimport { JobsService } from '../../services/jobs.service';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',// we can make this as an attribute, '[app-profile]' and then in html refference it as such ex. <div app-profile></div>\r\n  //or we can select as class ec '.app-profile' and in html say <div class='app-profile'></div>, but you cant select by id sadly, not supported in Angular\r\n  templateUrl: './profile.component.html', //lahko tudi tukaj notr (in-line) das vsebino html datoteke ampak je prevelika, bi mesali poslovno logiko...zaradi obvladovanje kompleksnosti\r\n  styleUrls: ['./profile.component.css']//but in that case we have to use just template, not templateUrl (pointing to somewhere else) and you can use `` to write it with new lines etc, just like you would in .html\r\n})//why is styleUrls an array? we can refference multiple stylesheets here. ex.  styleUrls: ['./profile.component.css', './notProfile.component.css'], also OR styles: [``], you can chose one method (inline or external), not combine both\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor(\r\n    private profileService: ProfilService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private jobsService: JobsService,\r\n    private instructionsService: InstructionsService,\r\n    private authenticationService: AuthenticationService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  closeResult = '';\r\n\r\n  public sporocilo: string = \"\";\r\n\r\n  public uporabnik: User;\r\n\r\n  public isLoggedIn: boolean = this.authenticationService.isLoggedIn();\r\n\r\n  public editState: boolean = false;\r\n\r\n  public viewResponsibilities: boolean = false;\r\n\r\n  public isAdmin: boolean = false;\r\n\r\n  public signedStatus: boolean = false;\r\n\r\n  public featuredEvents: InstructionsEvent[] = this.getFeatured(\"events\");\r\n\r\n  public featuredOffers: Job[] = this.getFeatured(\"offers\");\r\n\r\n  private getUserInfo(): void {\r\n    this.route.paramMap\r\n      .pipe(\r\n        switchMap((params: ParamMap) => {\r\n          let emailUporabnika = params.get('emailUporabnika');\r\n          return this.authenticationService.getUser(emailUporabnika);\r\n        })\r\n      )\r\n      .subscribe(async (user: User) => {\r\n        this.uporabnik = user;\r\n        if (this.authenticationService.isLoggedIn()) {\r\n          if (this.uporabnik.email === this.authenticationService.getCurrentUser().email) {\r\n            this.isAdmin = true;\r\n          }\r\n        }\r\n        this.sporocilo = user ? \"\" : \"Uporabnik ne obstaja :(\";\r\n      });\r\n  }\r\n\r\n  private getFeatured(type: string): any[] {\r\n    let featured: any[] = [];\r\n    switch (type) {\r\n      case 'events': {\r\n        this.instructionsService.getEvents()\r\n          .then(events => {\r\n            for (let i = 1; i < 50; i++) {\r\n              if (events[events.length - i]) {\r\n                featured.push(events[events.length - i]);\r\n              }\r\n            }\r\n          })\r\n          .catch(error => console.error(error));\r\n        break;\r\n      }\r\n      case 'offers': {\r\n        this.jobsService.getJobs()\r\n          .then(offers => {\r\n            for (let i = 1; i < 50; i++) {\r\n              if (offers[offers.length - i]) {\r\n                featured.push(offers[offers.length - i]);\r\n              }\r\n            }\r\n          })\r\n          .catch(error => console.error(error));\r\n        break;\r\n      }\r\n    }\r\n    // console.log(featured);\r\n    return featured;\r\n  }\r\n\r\n  //DOSREDI\r\n  openCity(evt, cityName): void {\r\n    this.viewResponsibilities = true;\r\n    var i, tabcontent, tablinks;\r\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n    for (i = 0; i < tabcontent.length; i++) {\r\n      tabcontent[i].style.display = \"none\";\r\n    }\r\n    tablinks = document.getElementsByClassName(\"tablinks\");\r\n    for (i = 0; i < tablinks.length; i++) {\r\n      tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\r\n    }\r\n    document.getElementById(cityName).style.display = \"block\";\r\n    if (evt)\r\n      evt.currentTarget.className += \" active\";\r\n  }\r\n\r\n  editUserInfo(): void {\r\n    this.editCSS(true);\r\n    this.editState = true;\r\n  }\r\n\r\n  saveUserInfo(): void {\r\n    this.editCSS(false);\r\n    this.editState = false;\r\n    if (this.isInstructor() && !this.uporabnik.statusInstruktorja) {\r\n      alert(\"Če še vedno imate prihajajoče dogodke, jih prosimo dokončajte ali ustrezno izbrišite. Odjavite se in se znova prijavite, da izgubite pravico do ustvarjanja dogodkov\");\r\n    } else if (!this.isInstructor() && this.uporabnik.statusInstruktorja) {\r\n      alert(\"Če želite začeti ustvarjati dogodke, se prosimo odjavite in znova prijavite!\");\r\n    }\r\n    this.profileService.editUserInfo(this.uporabnik)\r\n      .then(user => {\r\n        user ? this.uporabnik = user : this.sporocilo = \"Napaka pri posdabljanju uporabnika.\"\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = \"Napaka API-ja pri posodabljanju uporabnika.\"\r\n        //console.error(error);\r\n      });\r\n  }\r\n\r\n  private editCSS(isEdit): void {\r\n    if (isEdit) {\r\n      document.getElementById(\"edit-btn\").classList.remove(\"d-ilblock\");\r\n      document.getElementById(\"edit-btn\").classList.add(\"d-none\");\r\n      document.getElementById(\"save-btn\").classList.remove(\"d-none\");\r\n      document.getElementById(\"save-btn\").classList.add(\"d-ilblock\");\r\n    } else {\r\n      document.getElementById(\"edit-btn\").classList.remove(\"d-none\");\r\n      document.getElementById(\"edit-btn\").classList.add(\"d-ilblock\");\r\n      document.getElementById(\"save-btn\").classList.remove(\"d-ilblock\");\r\n      document.getElementById(\"save-btn\").classList.add(\"d-none\");\r\n    }\r\n  }\r\n\r\n  deleteUser() {\r\n    let userEmail = this.route.snapshot.paramMap.get('emailUporabnika');\r\n    this.profileService.deleteUser(userEmail)\r\n      .subscribe(\r\n        () => {\r\n          this.signedStatus = false;\r\n          this.uporabnik = null;\r\n          this.authenticationService.logout();\r\n          this.router.navigateByUrl('/');\r\n          //this.sporocilo = \"Uporabnik uspešno izbrisan.\"\r\n          alert(\"Uporabnik uspešno izbrisan.\")\r\n        },\r\n        (error) => this.sporocilo = \"Napaka API-ja pri brisanju dogodka.\"\r\n        //console.error(error)\r\n      );\r\n  }\r\n\r\n  private async isSignedUp(): Promise<void> {\r\n    if (this.isLoggedIn) {\r\n      let currentUserEmail = this.authenticationService.getCurrentUser().email\r\n      await this.authenticationService.getUser(currentUserEmail)\r\n        .then(user => this.signedStatus = true)\r\n        .catch(error => console.log(error));\r\n    }\r\n  }\r\n\r\n  public isInstructor(): boolean {\r\n    if (this.getCurrentUser().statusInstruktorja) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getCurrentUser(): User {\r\n    return (this.authenticationService.getCurrentUser());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUserInfo();\r\n    this.isSignedUp();\r\n  }\r\n\r\n  open(content) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  assure(content) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.deleteUser();\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  \r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}","<div class=\"alert alert-warning container\" style=\"margin-top: 2rem\" *ngIf=\"sporocilo\">{{sporocilo}}</div>\r\n\r\n<div  class=\"container\">\r\n  <h1 id=\"profile-naslov\">{{uporabnik.ime}} {{uporabnik.priimek}}</h1>\r\n\r\n  <!-- {{!-- BUTTONS TO EDIT --}} -->\r\n  <button *ngIf=\"uporabnik&&isAdmin&&isLoggedIn\" class=\"btn btn-danger d-inline\" id=\"delete-btn\" (click)=\"assure(delete)\"><i\r\n      class=\"fas fa-trash-alt\"></i></button>\r\n\r\n      <ng-template #delete let-modal>\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title\" id=\"modal-basic-title\">Izbriši profil</h4>\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form>\r\n            <p>Ali ste prepričani, da želite izbrisati svoj profil?</p>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <!-- <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.dismiss('Cross click')\">Prekliči</button> -->\r\n          <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Potrdi</button>\r\n        </div>\r\n      </ng-template>\r\n\r\n  <button *ngIf=\"uporabnik&&isAdmin&&isLoggedIn\" id=\"save-btn\" value=\"save\" class=\"btn btn-success d-none\"\r\n    (click)=\"saveUserInfo()\"><i class=\"fas fa-check\"></i></button>\r\n  <button *ngIf=\"uporabnik&&isAdmin&&isLoggedIn\" class=\"btn btn-warning d-ilblock\" id=\"edit-btn\" (click)=\"editUserInfo()\"><i\r\n      class=\"fas fa-edit\"></i></button>\r\n  <hr>\r\n\r\n  <!-- {{!-- DESCRIPTION AND PROFILE PIC --}} -->\r\n  <div *ngIf=\"!editState else editMode\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-xl-6 col-lg-6 col-md-6 d-flex justify-content-center flex-column\">\r\n        <form>\r\n          <div class=\"form-group\">\r\n            <label for=\"opisProfila\">Opis:</label>\r\n            <p class=\"card-text\" id=\"opis\">{{uporabnik.opis}}</p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-12 col-xl-6 col-lg-6 col-md-6 d-flex justify-content-center\">\r\n        <img src=\"/assets/media/pics/profile_picture.png\" alt=\"ProfilnaSlika\" class=\"img-responsive\"\r\n          style=\"width: 200px; height:200px\">\r\n      </div>\r\n    </div>\r\n\r\n    <!-- {{!-- MAIN DATA ABOUT USER --}} -->\r\n    <div class=\"row\">\r\n      <div class=\"table-responsive\">\r\n        <hr>\r\n        <table class=\"table table-borderless\" id=\"tabela-podatkov\">\r\n          <tbody>\r\n            <h4 id=\"profile-podnaslov\">Podatki:</h4>\r\n            <tr>\r\n              <th class=\"thPodatki\" scope=\"row\">Email naslov:</th>\r\n              <td id=\"email\">{{uporabnik.email}}</td>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"thPodatki\" scope=\"row\">Telefonska številka:</th>\r\n              <td id=\"phone\">{{uporabnik.telefonskaStevilka}}</td>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"thPodatki\" scope=\"row\">Status inštruktorja:</th>\r\n              <td *ngIf=\"uporabnik.statusInstruktorja\" id=\"status\">Da</td>\r\n              <td *ngIf=\"!uporabnik.statusInstruktorja\" id=\"status\">Ne</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!--  MAIN DATA ABOUT USER EDIT  -->\r\n  <ng-template #editMode>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 col-xl-6 col-lg-6 col-md-6 d-flex justify-content-center flex-column\">\r\n        <div class=\"form-group\">\r\n          <label for=\"opisProfila\">Opis:</label>\r\n          <input [(ngModel)]=\"uporabnik.opis\" class=\"card-text form-control form-control-md\" id=\"opis\" name=\"opis\"\r\n            type=\"text\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-xl-6 col-lg-6 col-md-6 d-flex justify-content-center\">\r\n        <img src=\"/assets/media/pics/profile_picture.png\" alt=\"ProfilnaSlika\" class=\"img-responsive\"\r\n          style=\"width: 200px; height:200px\">\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"row\">\r\n      <div class=\"table-responsive\">\r\n        <hr>\r\n        <table class=\"table table-borderless\" id=\"tabela-podatkov\">\r\n          <tbody>\r\n            <h4 id=\"profile-podnaslov\">Podatki:</h4>\r\n            <tr>\r\n              <th class=\"thPodatki\" scope=\"row\">Email naslov:</th>\r\n              <td id=\"email\">{{uporabnik.email}}</td>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"thPodatki\" scope=\"row\">Telefonska številka:</th>\r\n              <input [(ngModel)]=\"uporabnik.telefonskaStevilka\" id=\"phone\" class=\"form-control form-control-md\"\r\n                name=\"telefonskaStevilka\" type=\"number\">\r\n            </tr>\r\n            <tr>\r\n              <th class=\"thPodatki\" scope=\"row\">Status inštruktorja:</th>\r\n                <input [(ngModel)]=\"uporabnik.statusInstruktorja\"\r\n                  (change)=\"becomeAnInstructor(uporabnik.statusInstruktorja?true:false)\" type=\"checkbox\"\r\n                  id=\"statusInstruktorja\" name=\"statusInstruktorja\" checked=\"true\" value=\"true\">\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <hr>\r\n  <!-- {{!-- ADDITIONAL OPTIONS ADMIN --}} -->\r\n  <div *ngIf=\"uporabnik&&isAdmin\">\r\n    <div class=\"tab pb-5\">\r\n      <button class=\"tablinks\" (click)=\"openCity(event, 'kronologija')\">Seznam objav</button>\r\n      <!-- <button class=\"tablinks\" (click)=\"openCity(event, 'dela')\">Seznam objav</button> -->\r\n      <!-- <button class=\"tablinks\" (click)=\"open(content)\">Spremeni geslo</button> -->\r\n    </div>\r\n\r\n    <!-- {{!-- LIST OF POSTS --}} -->\r\n    <div id=\"kronologija\" class=\"tabcontent\">\r\n      <div class=\"justify-content-center\" *ngIf=\"featuredEvents || featuredOffers else niObveznosti\">\r\n        <table class=\"table table-hover container-fluid\" id=\"todo-list\" *ngIf=\"featuredEvents\">\r\n          <thead class=\"thead-dark\" id=\"featuredEvents\">\r\n            <th colspan=\"3\">\r\n              <h5 class=\"container-fluid text-light bg-dark\">Moji objavljeni dogodki</h5>\r\n            </th>\r\n            <tr>\r\n              <th scope=\"col\">Datum</th>\r\n              <th scope=\"col\" class=\"hour-column\">Ura</th>\r\n              <th scope=\"col\">Opravilo</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody *ngFor=\"let event of featuredEvents\">\r\n            <tr *ngIf=\"event.emailInstruktorja == uporabnik.email\">\r\n              <th scope=\"row\">{{ event.datum | date:'d. M. yyyy' }}</th>\r\n              <th scope=\"row\" class=\"hour-column\">{{ event.ura }}</th>\r\n              <th scope=\"row\"><a *ngIf=\"event._id\"\r\n                  routerLink=\"/instrukcije-dogodki/dogodek/{{ event._id }}\">{{event.naziv}}</a>\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n    \r\n        <table class=\"table table-hover container-fluid\" id=\"todo-list\" *ngIf=\"featuredOffers\">\r\n          <thead class=\"thead-dark\" id=\"featuredJobs\">\r\n            <th colspan=\"3\">\r\n              <h5 class=\"container-fluid text-light bg-dark\">Moja objavljena dela</h5>\r\n            </th>\r\n            <tr>\r\n              <th scope=\"col\">Datum</th>\r\n              <th scope=\"col\">Opravilo</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody *ngFor=\"let offer of featuredOffers\">\r\n            <tr *ngIf=\"offer.emailPonudnika===uporabnik.email\">\r\n              <th scope=\"row\">{{ offer.datum | date:'d. M. yyyy' }}</th>\r\n              <th scope=\"row\"><a *ngIf=\"offer._id\" routerLink=\"/ponudba-del/delo/{{ offer._id }}\">{{offer.naziv}}</a></th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n    \r\n        <ng-template #niObveznosti>\r\n          <th scope=\"row\" colspan=\"3\">Nimate še obveznosti.</th>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- {{!-- CHANGE PASSWORD --}} -->\r\n  </div>\r\n\r\n  <!-- <ng-template #content let-modal>\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Spremeni moje geslo</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form>\r\n          <p>Vpišite novo geslo, ki naj bo dolgo 8 do 20 znakov!</p>\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Novo geslo:</label><br>\r\n            <input type=\"password\" id=\"passwordReset\"><br><br>\r\n            <label for=\"surname\">Potrdi novo geslo: </label><br>\r\n            <input type=\"password\" id=\"passwordResetConfirm\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Potrdi</button>\r\n      </div>\r\n    </ng-template> -->\r\n\r\n  <!-- {{!-- ADDITIONAL OPTIONS NOT ADMIN --}} -->\r\n  <div *ngIf=\"uporabnik&&!isAdmin\">\r\n    <div class=\"tab pb-5\">\r\n      <button class=\"tablinks\" (click)=\"openCity(event, 'moje-instrukcije')\">Seznam objav</button>\r\n      <!-- <button class=\"tablinks\" (click)=\"openCity(event, 'moja-dela')\">Seznam objav (Ponudnik)</button> -->\r\n    </div>\r\n\r\n    <!-- {{!-- LIST OF POSTS --}} -->\r\n    <div id=\"moje-instrukcije\" class=\"tabcontent\">\r\n      <div class=\"justify-content-center\" *ngIf=\"featuredEvents || featuredOffers else niObveznosti\">\r\n        <table class=\"table table-hover container-fluid\" id=\"todo-list\" *ngIf=\"featuredEvents\">\r\n          <thead class=\"thead-dark\" id=\"featuredEvents\">\r\n            <th colspan=\"3\">\r\n              <h5 class=\"container-fluid text-light bg-dark\">{{ uporabnik.ime }} objavljeni dogodki</h5>\r\n            </th>\r\n            <tr>\r\n              <th scope=\"col\">Datum</th>\r\n              <th scope=\"col\" class=\"hour-column\">Ura</th>\r\n              <th scope=\"col\">Opravilo</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody *ngFor=\"let event of featuredEvents\">\r\n            <tr *ngIf=\"event.emailInstruktorja == uporabnik.email\">\r\n              <th scope=\"row\">{{ event.datum | date:'d. M. yyyy' }}</th>\r\n              <th scope=\"row\" class=\"hour-column\">{{ event.ura }}</th>\r\n              <th scope=\"row\"><a *ngIf=\"event._id\"\r\n                  routerLink=\"/instrukcije-dogodki/dogodek/{{ event._id }}\">{{event.naziv}}</a>\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n    \r\n        <table class=\"table table-hover container-fluid\" id=\"todo-list\" *ngIf=\"featuredOffers\">\r\n          <thead class=\"thead-dark\" id=\"featuredJobs\">\r\n            <th colspan=\"3\">\r\n              <h5 class=\"container-fluid text-light bg-dark\">{{ uporabnik.ime }} objavljeni dela</h5>\r\n            </th>\r\n            <tr>\r\n              <th scope=\"col\">Datum</th>\r\n              <th scope=\"col\">Opravilo</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody *ngFor=\"let offer of featuredOffers\">\r\n            <tr *ngIf=\"offer.emailPonudnika===uporabnik.email\">\r\n              <th scope=\"row\">{{ offer.datum | date:'d. M. yyyy' }}</th>\r\n              <th scope=\"row\"><a *ngIf=\"offer._id\" routerLink=\"/ponudba-del/delo/{{ offer._id }}\">{{offer.naziv}}</a></th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n    \r\n        <ng-template #niObveznosti>\r\n          <th scope=\"row\" colspan=\"3\">Nimajo še obveznosti.</th>\r\n        </ng-template>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { InjectionToken } from '@angular/core';\r\n\r\nexport const BROWSER_CACHE = new InjectionToken<Storage>(\r\n  'Browser cache',\r\n  {\r\n    providedIn: 'root',\r\n    factory: () => localStorage\r\n  }\r\n);","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { JobsService } from '../../../services/jobs.service';\r\n\r\nimport { Job } from 'src/app/common/classes/job';\r\n\r\n@Component({\r\n  selector: 'app-offers',\r\n  templateUrl: './offers.component.html',\r\n  styleUrls: ['./offers.component.css']\r\n})\r\nexport class OffersComponent implements OnInit {\r\n\r\n  constructor(private jobsService: JobsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getJobs();\r\n  }\r\n\r\n  public sporocilo: string = \"\";\r\n\r\n  public dela: Job[];\r\n\r\n  public page: Number = 1;\r\n  \r\n  public key: string = 'id';\r\n\r\n  public reverse: boolean = false;\r\n\r\n  isci() {\r\n    var filter, list, a, txtValue, search;\r\n\r\n    search = document.getElementById(\"search\");\r\n    list = document.getElementsByClassName(\"card\");\r\n\r\n    filter = search.value.toUpperCase();\r\n\r\n    let i: number;\r\n\r\n    for (i = 0; i < list.length; i++) {\r\n      a = list[i].getElementsByClassName(\"card-title\")[0];\r\n      txtValue = a.textContent || a.innerText;\r\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n        list[i].style.display = \"\";\r\n      } else {\r\n        list[i].style.display = \"none\";\r\n      }\r\n    }\r\n  }\r\n\r\n  private getJobs(): void {\r\n    this.jobsService.getJobs()\r\n    .then(jobs => {\r\n      this.dela = jobs.reverse();\r\n      this.sporocilo = jobs.length > 0 ? \"\" : \"Ne najdem nobenega dela :(\"\r\n    })\r\n    .catch(error => {\r\n      this.sporocilo = \"Napaka API-ja pri iskanju del.\"\r\n      // console.error(error);\r\n    });\r\n  }\r\n\r\n  sort() {\r\n    this.key = this.getSelectValue();\r\n  }\r\n\r\n  reverseSet() {\r\n    this.reverse = !this.reverse;\r\n  }\r\n\r\n  private getSelectValue(): string {\r\n    return (<HTMLSelectElement>document.getElementById('razvrsti')).value;\r\n  }\r\n\r\n}","<div id=\"job-header\" class=\"container\">\r\n  <h2 class=\"bg-info\">Seznam ponudbe del</h2>\r\n</div>\r\n\r\n<!--F i l t e r-->\r\n<div class=\"container\" id=\"filter-bar\">\r\n\r\n  <div class=\"filter-item\">\r\n    <label for=\"razvrsti\"><h5>Razvrsti po:</h5></label>\r\n    <select name=\"razvrsti\" id=\"razvrsti\" class=\"form-control\">\r\n      <option value=\"\">Izberi filter...</option>\r\n      <option value=\"datum\">Datumu)</option>\r\n      <!--<option value=\"REVdatum\">Datumu (kasnejši najprej)</option>-->\r\n      <option value=\"naziv\">Imenu</option>\r\n      <!--<option value=\"REVnaziv\">Imenu (Z-A)</option>-->\r\n      <option value=\"cena\">Ceni</option>\r\n      <!--<option value=\"REVcena\">Ceni (dražji najprej)</option>-->\r\n    </select>\r\n  </div>\r\n\r\n  <button id=\"filter-btn\" value=\"Filtriraj\" class=\"btn btn-light\" click=\"sort()\">Filtriraj</button>\r\n\r\n  <button class=\"btn btn-light btn-order\" style=\"cursor: pointer;\" (click)=\"reverseSet()\">\r\n    <i class=\"fas fa-long-arrow-alt-up\" *ngIf=\"reverse\"></i>\r\n    <i class=\"fas fa-long-arrow-alt-down\" *ngIf=\"!reverse\"></i>\r\n  </button>\r\n\r\n  \r\n\r\n</div>\r\n\r\n<!--S e a r c h  b a r-->\r\n<div class=\"input-group mb-3 container\">\r\n  <input id=\"search\" (keyup)=\"isci()\" type=\"text\" class=\"form-control\" placeholder=\"Vpiši želeno iskanje\"\r\n    aria-label=\"Iskanje\" aria-describedby=\"search-button\">\r\n  <div class=\"input-group-append\">\r\n    <button class=\"btn btn-outline-secondary btn-info\" type=\"button\" id=\"search-button\">Išči</button>\r\n  </div>\r\n</div>\r\n\r\n<!--N e w-->\r\n<div class=\"new-job container\">\r\n  <a routerLink=\"dodaj\" class=\"btn btn-success\">Ustvari novo ponudbo</a>\r\n</div>\r\n\r\n<!--J o b s-->\r\n<div class=\"alert alert-warning container\" style=\"margin-top: 2rem\" *ngIf=\"sporocilo\">{{sporocilo}}</div>\r\n\r\n<div id=\"instructors\" class=\"container\" *ngIf=\"dela\">\r\n  <div class=\"card instructor\" style=\"width: 18rem;\" *ngFor=\"let delo of dela | orderBy: key: reverse | paginate: {\r\n    id: 'pagination', itemsPerPage: 10, currentPage: page\r\n  }\">\r\n  <img class=\"card-img-top\" src=\"../../../assets/media/thumbnails/red.png\" alt=\"Card image cap\">\r\n    <div class=\"card-body\">\r\n      <h5 class=\"card-title\">{{delo.naziv}}</h5>\r\n      <p class=\"card-text\" style=\"height: 2rem; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\">\r\n        {{delo.opis}}</p>\r\n      <a routerLink=\"/ponudba-del/delo/{{delo._id}}\" class=\"btn btn-primary\">Podrobnosti</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <pagination-controls class=\"pagination\" id=\"pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\">\r\n  </pagination-controls>\r\n</div>\r\n\r\n<hr>\r\n\r\n<get-started></get-started>\r\n\r\n<script>\r\n  let filterBtn = document.getElementById(\"filter-btn\");\r\n  filterBtn.addEventListener('click', function () {\r\n    console.log(\"Filter button has been clicked!\");\r\n\r\n    var razvrsti = document.getElementById(\"razvrsti\").value;\r\n\r\n    console.log(razvrsti);\r\n\r\n    window.location = \"/ponudba-del/\" + razvrsti;\r\n\r\n  });\r\n\r\n  function isci() {\r\n    // Declare variables\r\n    var filter, list, a, txtValue, search;\r\n\r\n\r\n    //ul = document.getElementById(\"myUL\");\r\n    //li = ul.getElementsByTagName('li');\r\n\r\n    search = document.getElementById(\"search\");\r\n    list = document.getElementsByClassName(\"card\");\r\n\r\n    filter = search.value.toUpperCase();\r\n\r\n    // Loop through all list items, and hide those who don't match the search query\r\n    for (i = 0; i < list.length; i++) {\r\n      a = list[i].getElementsByClassName(\"card-title\")[0];\r\n      txtValue = a.textContent || a.innerText;\r\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n        list[i].style.display = \"\";\r\n      } else {\r\n        list[i].style.display = \"none\";\r\n      }\r\n    }\r\n  }\r\n</script>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'sortirajSporocila'\r\n})\r\nexport class SortirajSporocilaPipe implements PipeTransform {\r\n\r\n  transform(pridobljeniPodatki: any, idPrejemnika: string): unknown {\r\n\r\n    // u s t v a r i   a r r a y   s p o r o c i l //\r\n    var matchingSporocila = new Array();\r\n    var stevec = 0;\r\n    for(var i = 0; i < pridobljeniPodatki.prviUser.poslanaSporocila.length; i++){\r\n    if(pridobljeniPodatki.prviUser.poslanaSporocila[i].prejemnikSporocila == pridobljeniPodatki.drugiUser._id){\r\n        matchingSporocila[stevec] = pridobljeniPodatki.prviUser.poslanaSporocila[i];\r\n        stevec++;\r\n    }\r\n    }\r\n    \r\n    for(var i = 0; i < pridobljeniPodatki.drugiUser.poslanaSporocila.length; i++){\r\n      if(pridobljeniPodatki.drugiUser.poslanaSporocila[i].prejemnikSporocila == pridobljeniPodatki.prviUser._id){\r\n        matchingSporocila[stevec] = pridobljeniPodatki.drugiUser.poslanaSporocila[i];\r\n        stevec++;\r\n      }\r\n    }\r\n\r\n    if(matchingSporocila.length == 0) {\r\n      matchingSporocila[0] = \"Z osebo še nimate pogovora. Pošli novo sporočilo.\"\r\n      return matchingSporocila;\r\n    }\r\n    var sortedSporocila = matchingSporocila.sort(function(a, b) {\r\n    var dateA = new Date(a.cas), dateB = new Date(b.cas);\r\n    return dateA.getTime() - dateB.getTime();\r\n    });\r\n\r\n    return sortedSporocila;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { SortirajSporocilaPipe } from '../../../pipes/sortiraj-sporocila.pipe';\r\nimport { ChatService } from '../../../services/chat.service'; //ubistvu importas class ChatService\r\nimport { AuthenticationService } from 'src/app/common/services/authentication.service';\r\nimport { KontaktiComponent } from '../kontakti/kontakti.component';\r\n\r\n@Component({\r\n  selector: 'app-sporocila',\r\n  templateUrl: './sporocila.component.html',\r\n  styleUrls: ['./sporocila.component.css'],\r\n  providers: [SortirajSporocilaPipe]\r\n})\r\nexport class SporocilaComponent implements OnChanges {\r\n  \r\n  @Input() sporocila: any;\r\n  \r\n  constructor(\r\n    private sortirajPipe: SortirajSporocilaPipe,\r\n    private chatStoritev: ChatService,\r\n    private authenticationService: AuthenticationService,\r\n    private kontaktiComponent : KontaktiComponent\r\n  ) { }\r\n  \r\n  public nimasSporocil: boolean = false;\r\n  public idPrejemnika: string;\r\n\r\n  public novoSporocilo: any = {\r\n    besedilo: '',\r\n    prejemnikSporocila: ''\r\n  }\r\n\r\n  public dodajNovoSporocilo(): void {\r\n    this.obrazecNapaka = \"\";\r\n    if (this.soPodatkiUstrezni()) {\r\n      \r\n      this.chatStoritev\r\n        .posljiSporocilo(this.authenticationService.getCurrentUser().email, this.novoSporocilo)\r\n        .then(sporocilo => {\r\n          // console.log(\"Sporocilo shranjeno\", sporocilo);\r\n          if(this.sporocila === 'Z osebo še nimate pogovora. Pošli novo sporočilo.') this.sporocila = null;\r\n          //this.sporocila.push(this.novoSporocilo.besedilo);\r\n          this.novoSporocilo.besedilo = '';\r\n          this.kontaktiComponent.kliciPridobiSporocila(this.idPrejemnika);\r\n        })\r\n        .catch(napaka => this.obrazecNapaka = napaka);\r\n    } else {\r\n      this.obrazecNapaka = \"Prosim vnesite sporočilo\";\r\n    }\r\n  }\r\n\r\n  public obrazecNapaka: string;\r\n\r\n  private soPodatkiUstrezni(): boolean {\r\n    if (this.novoSporocilo.besedilo && this.novoSporocilo.prejemnikSporocila) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.idPrejemnika = this.sporocila.drugiUser._id;\r\n    this.sporocila = this.sortirajPipe.transform(this.sporocila, this.sporocila.drugiUser._id);\r\n    this.novoSporocilo.prejemnikSporocila = this.idPrejemnika;\r\n    \r\n    if((this.sporocila[0]) == 'Z osebo še nimate pogovora. Pošli novo sporočilo.'){\r\n      this.nimasSporocil = true;\r\n    } else{\r\n      this.nimasSporocil = false;\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n","\r\n\r\n    <div *ngIf=\"obrazecNapaka\" class=\"alert alert-danger\" role=\"alert\">\r\n        {{ obrazecNapaka }}\r\n    </div>\r\n    \r\n    <div class=\"container-fluid\" id=\"messages\" style=\"height: 60vh;\">\r\n        <div  class=\"message-recieved\">\r\n            \r\n            <div *ngIf=\"nimasSporocil\"  class=\"alert alert-secondary\" role=\"alert\">\r\n                Z osebo še nimate pogovora. Pošlji sporočilo.\r\n            </div>\r\n            <div *ngIf=\"!nimasSporocil\">\r\n                <div  *ngFor=\"let sporocilo of sporocila\">\r\n                    \r\n                    <div *ngIf=\"sporocilo.prejemnikSporocila === (idPrejemnika)\" >\r\n                        <div id=\"fotrSporocil\">\r\n                            <div class=\"msg_moj_zunanji\" >\r\n                                <h4><span class=\"msg_moj\"> {{sporocilo.besedilo}}</span></h4>\r\n                                <span class=\"msg_time_moj\" >{{sporocilo.cas | cas}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div *ngIf=\"sporocilo.prejemnikSporocila != (idPrejemnika)\">\r\n                        <div id=\"fotrSporocil\">\r\n                            <div class=\"msg_dobljen_zunanji\" >\r\n                                <h4><span class=\"msg_dobljen\"> {{sporocilo.besedilo}}</span></h4>\r\n                                <span class=\"msg_time_dobljen\" >{{sporocilo.cas | cas}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        \r\n    \r\n        <form (ngSubmit)=\"dodajNovoSporocilo()\" style=\"position: fixed; bottom: 0;\"method=\"post\" class=\"formClass\">\r\n            <div class=\"container-fluid\" id=\"input-bar\">\r\n                <div class=\"input-group\">\r\n                        <input [(ngModel)]=\"novoSporocilo.besedilo\" type=\"text\"  class=\"form-control\" placeholder=\"Napišite sporočilo...\" autocomplete=\"off\" aria-label=\"\"\r\n                            aria-describedby=\"basic-addon1\" name=\"besedilo\">\r\n                    <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-info\" type=\"button\" style=\"border-radius: 0; background-color: white; width: 3rem; border-color: #ced4da; \">\r\n                            <i class=\"fas fa-paperclip\" style=\"color: #6d757d; \" ></i>\r\n                        </button>\r\n                        <button type=\"submit\" class=\"btn btn-info\" style=\"border-radius: 0;\">Pošlji</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\n\r\n        function posljiSporocilo(){\r\n    \r\n            event.preventDefault();\r\n            var linkPost =  document.getElementById('formId').action;\r\n            var besediloIzForma = document.getElementById('besediloInputId').value;\r\n    \r\n            var asinhronaZahteva = new XMLHttpRequest();\r\n            asinhronaZahteva.addEventListener(\"load\", function(){\r\n                console.log(asinhronaZahteva.responseText);\r\n                })\r\n    \r\n            asinhronaZahteva.open(\"POST\", linkPost, false);\r\n            var zacasna = {\r\n                besedilo: \"proba\"\r\n            }\r\n            asinhronaZahteva.send(JSON.stringify(zacasna));      \r\n        }\r\n    \r\n        function naloziKontakt(idPrejemnika, imePrejemnika, priimekPrejemnika){\r\n    \r\n            var link =  window.location + \"/\" + idPrejemnika;\r\n            var asinhronaZahteva = new XMLHttpRequest();\r\n            asinhronaZahteva.addEventListener(\"load\", function() {\r\n    \r\n                var pridobljeniPodatki = JSON.parse(asinhronaZahteva.responseText);\r\n    \r\n                // u s t v a r i   a r r a y   s p o r o c i l //\r\n                var matchingSporocila = new Array();\r\n                var stevec = 0;\r\n                for(var i = 0; i < pridobljeniPodatki.prviUser.poslanaSporocila.length; i++){\r\n                if(pridobljeniPodatki.prviUser.poslanaSporocila[i].prejemnikSporocila == pridobljeniPodatki.drugiUser._id){\r\n                    matchingSporocila[stevec] = pridobljeniPodatki.prviUser.poslanaSporocila[i];\r\n                    stevec++;\r\n                }\r\n                }\r\n                var nimasPogovora = (matchingSporocila.length > 0) ? null : \"Z osebo še nimate pogovora. Pošli novo sporočilo.\";\r\n    \r\n                for(var i = 0; i < pridobljeniPodatki.drugiUser.poslanaSporocila.length; i++){\r\n                if(pridobljeniPodatki.drugiUser.poslanaSporocila[i].prejemnikSporocila == pridobljeniPodatki.prviUser._id){\r\n                    matchingSporocila[stevec] = pridobljeniPodatki.drugiUser.poslanaSporocila[i];\r\n                    stevec++;\r\n                }\r\n                }\r\n              \r\n                var sortedSporocila = matchingSporocila.sort(function(a, b) {\r\n                var dateA = new Date(a.cas), dateB = new Date(b.cas);\r\n                return dateA - dateB;\r\n                });\r\n    \r\n                // n a s t a v i   l i n k   z a   p o s t //\r\n                var form = document.getElementById('formId');\r\n                form.action = '/sporocanje/' + idPrejemnika;\r\n    \r\n                // d o d a j   i m e   k o l e g a //\r\n                if(document.getElementById('imeKolega')) document.getElementById('imeKolega').remove();\r\n                var imeDiv = document.createElement('div');\r\n                imeDiv.innerHTML = imePrejemnika + ' ' + priimekPrejemnika;\r\n                imeDiv.classList.add('container-fluid');\r\n                imeDiv.setAttribute('id', 'imeKolega');\r\n                document.getElementById('chatbox').prepend(imeDiv);\r\n    \r\n                // r e m o v e   p r e j s n a   s p o r o c i l a //\r\n                var fotr = document.getElementById('fotrSporocil');\r\n                if(document.getElementById('prvicDiv')) document.getElementById('prvicDiv').remove();\r\n                while(fotr.firstChild){\r\n                    fotr.removeChild(fotr.lastChild);\r\n                }\r\n    \r\n                // n i m a s  p o g o v o r a //\r\n                if(nimasPogovora){\r\n                    var nimas = document.createElement(div);\r\n                    nimas.classList.add('message-wrap', 'container-fluid');\r\n                    nimas.setAttribute('id', 'prvicDiv');\r\n                    nimas.innerHTML = nimasPogovora;\r\n                    document.getElementById('chatbox').append(nimas);\r\n                }\r\n               \r\n                // d o d a j  n o v a //\r\n                for(var i = 0; i < sortedSporocila.length; i++){\r\n                   \r\n                    var date = new Date(sortedSporocila[i].cas);\r\n                    var formatiranDatum = date.getHours() + ':' + (date.getMinutes() < 10? '0':'') + date.getMinutes();\r\n                    \r\n                    var cas = document.createElement('span');\r\n                    cas.innerHTML = formatiranDatum;\r\n    \r\n                    var znotraj = document.createElement('div');\r\n                    znotraj.innerHTML = sortedSporocila[i].besedilo;\r\n    \r\n                    var zunanji = document.createElement('div');\r\n                    zunanji.appendChild(znotraj);\r\n                    zunanji.classList.add('d-flex', 'mb-4');\r\n    \r\n                    if(sortedSporocila[i].prejemnikSporocila == idPrejemnika){\r\n                        zunanji.classList.add('justify-content-end');\r\n                        znotraj.classList.add('msg_moj');\r\n                        cas.classList.add('msg_time_moj');\r\n                    }else{\r\n                        zunanji.classList.add('justify-content-start');\r\n                        znotraj.classList.add('msg_kolega');\r\n                        cas.classList.add('msg_time_kolega');\r\n                    }\r\n    \r\n                    znotraj.appendChild(cas);\r\n                    fotr.appendChild(zunanji);\r\n                }\r\n            }); \r\n        \r\n            asinhronaZahteva.open(\"GET\", link, false);\r\n            asinhronaZahteva.send(null);       //sele tuki obistvu posles zahtevo\r\n        }\r\n    </script>\r\n    ","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { InstructionsService } from '../../../services/instructions.service';\r\n\r\nimport { User } from '../../../classes/user';\r\n\r\n@Component({\r\n  selector: 'app-instructors',\r\n  templateUrl: './instructors.component.html',\r\n  styleUrls: ['./instructors.component.css']\r\n})\r\nexport class InstructorsComponent implements OnInit {\r\n\r\n  constructor(private instructionsService: InstructionsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInstructors();\r\n  }\r\n\r\n  isci() {\r\n    var filter, list, a, txtValue, search;\r\n\r\n    search = document.getElementById(\"search\");\r\n    list = document.getElementsByClassName(\"card\");\r\n\r\n    filter = search.value.toUpperCase();\r\n\r\n    let i: number;\r\n\r\n    for (i = 0; i < list.length; i++) {\r\n      a = list[i].getElementsByClassName(\"card-title\")[0];\r\n      txtValue = a.textContent || a.innerText;\r\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n        list[i].style.display = \"\";\r\n      } else {\r\n        list[i].style.display = \"none\";\r\n      }\r\n    }\r\n  }\r\n\r\n  public sporocilo: string = \"\";\r\n\r\n  public instruktorji: User[];\r\n\r\n  public page: Number = 1;\r\n\r\n  private getInstructors(): void {\r\n    this.instructionsService.getInstructors()\r\n    .then(users => {\r\n      this.instruktorji = users.reverse();\r\n      this.sporocilo = users.length > 0 ? \"\" : \"Ne najdem nobenega inštruktorja :(\"\r\n    })\r\n    .catch(error => {\r\n      this.sporocilo = \"Napaka API-ja pri iskanju inštruktorjev.\"\r\n      // console.error(error);\r\n    });\r\n  }\r\n  \r\n}","<ul class=\"nav container\" id=\"ins-nav\">\r\n    <li class=\"nav-item nav-item-left-border bg-info\">\r\n        <a class=\"nav-link active\" routerLink=\"/instruktorji\">Inštruktorji</a>\r\n    </li>\r\n    <li class=\"nav-item nav-item-inactive-bg nav-item-right-border\">\r\n        <a class=\"nav-link\" routerLink=\"/instrukcije-dogodki\">Dogodki</a>\r\n</ul>\r\n\r\n<!--S e a r c h  b a r-->\r\n<div class=\"input-group mb-3 container\">\r\n    <input id=\"search\" (keyup)=\"isci()\" type=\"text\" class=\"form-control\" placeholder=\"Poišči inštruktorja...\"\r\n        aria-label=\"Iskanje\" aria-describedby=\"search-button\">\r\n    <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-secondary btn-info\" type=\"button\" id=\"search-button\">Išči</button>\r\n    </div>\r\n</div>\r\n\r\n<!--I n s t r u c t o r s-->\r\n<div class=\"alert alert-warning container\" style=\"margin-top: 2rem;\" *ngIf=\"sporocilo\">\r\n    {{sporocilo}}\r\n</div>\r\n\r\n<div id=\"instructors\" class=\"container\">\r\n    <span *ngFor=\"let instruktor of instruktorji | paginate: {\r\n        id: 'pagination', itemsPerPage: 10, currentPage: page\r\n      }\">\r\n        <div class=\"card instructor\" style=\"width: 18rem;\" *ngIf=\"instruktor.statusInstruktorja\">\r\n            <img class=\"card-img-top\" src=\"../../../../../assets/media/thumbnails/blue.png\" alt=\"Card image cap\">\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\" style=\"overflow: hidden; text-overflow: ellipsis;\">{{instruktor.ime}}\r\n                    {{instruktor.priimek}}</h5>\r\n                <p class=\"card-text\"> {{instruktor.opis}} </p>\r\n                <a routerLink=\"/profil/{{instruktor.email}}\" class=\"btn btn-primary\">Preveri profil</a>\r\n            </div>\r\n        </div>\r\n    </span>\r\n</div>\r\n\r\n<div>\r\n    <pagination-controls class=\"pagination\" id=\"pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\">\r\n    </pagination-controls>\r\n</div>\r\n\r\n<hr>\r\n\r\n<get-started></get-started>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000/api',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.css']\r\n})\r\nexport class LandingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"hero\">\r\n    <video loop muted autoplay poster=\"../../../assets/media/backgrounds/welcome_poster.png\">\r\n        <source src=\"../../../assets/media/backgrounds/welcome_video.mp4\" type=\"video/mp4\">\r\n    </video>\r\n\r\n    <div class=\"welcome-content d-flex align-items-center\">\r\n        <div class=\"container text-light text-center\" id=\"motto\">\r\n            <h4>Povežimo znanje</h4>\r\n            <br>\r\n            <h1>Svet stoji na mladih, ampak tudi ti potrebujejo podporo</h1>\r\n            <br>\r\n            <h5>Ne dovoli trenutnemu epidemiološkem stanju, da te spravi na kolena. Poveži se s kolegi in razširi\r\n                obseg\r\n                znanja.\r\n                <br>\r\n                <br>\r\n                Pridi do zaslužka na področju tvojega študija in pomagaj sovrstnikom doseči svoje cilje.\r\n            </h5>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"container-fluid text-light text-center middle-content\">\r\n    <div class=\"row container-fluid linkBox\" >\r\n        <div class=\"col\">\r\n\r\n            <div class=\"container-fluid bg-info link\" routerLink=\"instruktorji\">\r\n                <h1>Inštrukcije</h1>\r\n            </div>\r\n            <div class=\"label\">\r\n                <h5>Potrebuješ pomoč pri učenju težjega predmeta? Preveri seznam dosegljivih inštruktorjev in se\r\n                    dogovori\r\n                    za\r\n                    pomoč.</h5>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-fluid form-container middle-content\" style=\"padding-bottom: 20px;\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 mx-auto\">\r\n            <div class=\"formSign form\">\r\n                <div class=\"logo mb-3\">\r\n                    <div class=\"col-md-12 text-center\">\r\n                        <h1>Postani inštruktor</h1>\r\n                        <p>Obvladaš katerega izmed šolskih predmetov, si pripravljen deliti svoje znanje ter\r\n                            pomagati drugim?</p>\r\n                        <hr>\r\n                        <br>\r\n                        <img src=\"../../../assets/media/pics/instruktor.png\" class=\"mx-auto d-block\"\r\n                            style=\"width: 50%; padding-bottom: 15px;\">\r\n                        <p>Vse kar moraš narediti je, da se registriraš (označiš da želiš biti inštruktor) in si\r\n                            urediš svoj\r\n                            profil,\r\n                            da bodo ostali lahko videli katere predmete obvladaš. Nato objaviš ponudbo, v katero\r\n                            dodaš link do svoje Zoom konference in počakaš učence, da se prijavijo\r\n                            na tvoje inštrukcije. Na svoji ponudbi lahko nastaviš ceno, seveda pa lahko pomagaš\r\n                            brezplačno.\r\n                        </p>\r\n                        <hr>\r\n                        <p>Bi se rad preizkusil v vlogi inštruktorja oziroma si že stari znanec inštuiranja? <a\r\n                                routerLink=\"registracija\" id=\"signup\">Pridruži se zdaj!</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 mx-auto\">\r\n            <div class=\"formSign form\">\r\n                <div class=\"logo mb-3\">\r\n                    <div class=\"col-md-12 text-center\">\r\n                        <h1>Postani učenec</h1>\r\n                        <p>Imaš težave v šoli in bi rad dobil dodatno razlago snovi, ali želiš izvedeti še več o tem\r\n                            področju?</p>\r\n                        <hr>\r\n                        <br>\r\n                        <img src=\"../../../assets/media/pics/ucenec.png\" class=\"mx-auto d-block\"\r\n                            style=\"width: 50%; padding-bottom: 15px;\">\r\n                        <p>Si zaradi aktualnega virusa zaostal za snovjo v šoli? So ti Arnesove težave s serverji\r\n                            zmešale štrene?\r\n                            Ustvarili smo portal, da te težave odpravimo. Bi rad poiskal pomoč pri inštruktorjih, pa\r\n                            zaradi\r\n                            najnovejših ukrepov ne smeš zapustiti lastne hiše? Pri nas vse poteka brezstično in na\r\n                            daljavo.\r\n                            Registriraj se in preveri ponudbo.\r\n                        </p>\r\n                        <hr>\r\n                        <p>Se najdeš v zgornjem poklicu in želiš razširi znanje? <br><a routerLink=\"registracija\"\r\n                                id=\"signup\">Pridruži\r\n                                se zdaj!</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-fluid text-light text-center middle-content\" >\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            \r\n            \r\n            <div class=\"container-fluid bg-info link\" routerLink=\"ponudba-del\">\r\n                <h1>Ponudba del</h1>\r\n            </div>\r\n\r\n            <div class=\"label\">\r\n                <h5>Iščeš zaslužek ali želiš pomagati s svojim znanjem? Preglej si ponudbo del in dogovori se s\r\n                    ponudnikom.</h5>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-fluid form-container middle-content\" style=\"padding-bottom: 40px;\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 mx-auto\">\r\n            <div class=\"formSign form\">\r\n                <div class=\"logo mb-3\">\r\n                    <div class=\"col-md-12 text-center\">\r\n                        <h1>Sodeluj v projektih</h1>\r\n                        <p>Iščeš dodaten zaslužek ali nove izzive?</p>\r\n                        <hr>\r\n                        <br>\r\n                        <img src=\"../../../assets/media/pics/delo.png\" class=\"mx-auto d-block\"\r\n                            style=\"width: 50%; padding-bottom: 15px;\">\r\n                        <p>Podjetja in posamezniki v Sloveniji iščejo ljudi, ki bi jim pomagail izpeljati razne\r\n                            projekte oziroma\r\n                            opravila,\r\n                            za ketere jim zmanjka časa. Če imaš ti svojega časa preveč, se hitro registriraj in\r\n                            preveri ponudbe za\r\n                            delo, saj\r\n                            lahko z delom razširiš svoje znanje in zraven tega tudi nekaj zaslužiš.\r\n                        </p>\r\n                        <hr>\r\n                        <p>Preveri seznam del in projektov. <a routerLink=\"registracija\" id=\"signup\">Pridruži se\r\n                                zdaj!</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { formatDate } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Chart } from 'chart.js';\r\nimport { InstructionsEvent } from '../../classes/event';\r\nimport { Job } from '../../classes/job';\r\nimport { User } from '../../classes/user';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\n\r\nimport { CovidService } from '../../services/covid.service';\r\nimport { InstructionsService } from '../../services/instructions.service';\r\nimport { JobsService } from '../../services/jobs.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(\r\n    private covidService: CovidService,\r\n    private authenticationService: AuthenticationService,\r\n    private instructionsService: InstructionsService,\r\n    private jobsService: JobsService,\r\n    private router: Router\r\n    //private chart: Chart\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.authenticationService.isLoggedIn()) {\r\n      this.router.navigateByUrl('/prijava');\r\n    } else {\r\n      this.getCovidInfo();\r\n      this.getCurrentUser();\r\n    }\r\n  }\r\n \r\n  public sporocilo: string = \"\";\r\n\r\n  public covidInfo: any;\r\n\r\n  public chart: any = [];\r\n\r\n  public uporabnik: User = null;\r\n\r\n  public featuredInstructors: User[] = this.getFeatured(\"instructors\");\r\n\r\n  public featuredEvents: InstructionsEvent[] = this.getFeatured(\"events\");\r\n\r\n  public featuredOffers: Job[] = this.getFeatured(\"offers\");\r\n\r\n  private getCovidInfo(): void {\r\n    this.covidService.getCovidInfo()\r\n    .then(covidInfo => {\r\n      this.covidInfo = covidInfo;\r\n      this.sporocilo = covidInfo.length > 0 ? \"\" : \"Trenutno ne najdem informacij, poskusite znova kasneje.\"\r\n\r\n      // New aray of all Cases elements\r\n      let cases = covidInfo.map(covidInfo => covidInfo.Cases);\r\n      let dates = covidInfo.map(covidInfo => covidInfo.Date);\r\n\r\n      cases = cases.slice(cases.length - 10, cases.length);\r\n      dates = dates.slice(dates.length - 10, dates.length);\r\n\r\n      let formatedDates = [];\r\n      //console.log(cases, dates);\r\n      dates.forEach(element => {\r\n        formatedDates.push(formatDate(element, 'dd/MM', 'en'));\r\n      });\r\n\r\n      Chart.defaults.global.defaultFontSize = 13;\r\n\r\n      this.chart = new Chart('canvas', {\r\n        type: 'line',\r\n        data: {\r\n          labels: formatedDates,\r\n          datasets: [{\r\n            label: 'Trend naraščanja celotnega števila okužb s Covid-19 v Sloveniji v zadnjih 10 dneh',\r\n            backgroundColor: \"rgb(160, 49, 58)\",\r\n            borderColor: \"black\",\r\n            borderWidth: 1,\r\n            data: cases,\r\n            fill: true,\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          title: {\r\n\r\n          },\r\n          tooltips: {\r\n            mode: 'index',\r\n            intersect: false,\r\n          },\r\n          hover: {\r\n            mode: 'nearest',\r\n            intersect: true\r\n          },\r\n          scales: {\r\n            xAxes: [{\r\n              display: true,\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: 'Datum'\r\n              }\r\n            }],\r\n            yAxes: [{\r\n              display: true,\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: 'Število okužb'\r\n              }\r\n            }]\r\n          }\r\n        }\r\n      })\r\n    })\r\n    .catch(error => {\r\n      this.sporocilo = \"Trenutno ne najdem informacij, poskusite znova kasneje.\"\r\n      // console.error(error);\r\n    });\r\n  }\r\n\r\n  public getUsername(): string {\r\n    return this.authenticationService.getCurrentUser().ime;\r\n  }\r\n\r\n  public getCurrentUser(): void {\r\n    let currentUserEmail = this.authenticationService.getCurrentUser().email;\r\n    this.authenticationService.getUser(currentUserEmail)\r\n    .then(user => {this.uporabnik = user;})\r\n    .catch(error => {});\r\n  }\r\n\r\n  public getCasesToday(): number {\r\n    let cases = this.covidInfo.map(covidInfo => covidInfo.Cases);\r\n    return (cases[cases.length - 1]);\r\n  }\r\n\r\n  private getFeatured(type: string): any[] {\r\n    let featured: any[] = [];\r\n    switch(type) {\r\n      case 'instructors': {\r\n        this.instructionsService.getInstructors()\r\n        .then(instructors => {\r\n          for(let i = 1; i < 4; i ++) {\r\n            if(instructors[instructors.length - i]) {\r\n              featured.push(instructors[instructors.length - i]);\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {});\r\n        break;\r\n      }\r\n      case 'events': {\r\n        this.instructionsService.getEvents()\r\n        .then(events => {\r\n          for(let i = 1; i < 4; i ++) {\r\n            if(events[events.length - i]) {\r\n              featured.push(events[events.length - i]);\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {});\r\n        break;\r\n      }\r\n      case 'offers': {\r\n        this.jobsService.getJobs()\r\n        .then(offers => {\r\n          for(let i = 1; i < 4; i++) {\r\n            if(offers[offers.length - i]) {\r\n              featured.push(offers[offers.length - i]);\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {});\r\n        break;\r\n      }\r\n    }\r\n\r\n    return featured;\r\n  }\r\n\r\n}\r\n","<h1 class=\"container\" id=\"welcome-sign\"><strong>Pozdravljeni, {{ getUsername() }}</strong></h1>\r\n<div id=\"moja-opravila\" class=\"container\" style=\"padding: 0;\">\r\n    <h1 class=\"container-fluid text-light bg-dark\">Moja opravila</h1>\r\n    <table class=\"table table-primary table-hover container-fluid\" id=\"todo-list\" *ngIf=\"uporabnik\">\r\n        <thead class=\"thead-dark\">\r\n            <tr>\r\n                <th scope=\"col\">Datum</th>\r\n                <th scope=\"col\" class=\"hour-column\">Ura</th>\r\n                <th scope=\"col\">Opravilo</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody *ngIf=\"uporabnik.dogodki.length||uporabnik.dela.length else niObveznosti\">\r\n            <tr *ngFor=\"let dogodek of uporabnik.dogodki\">\r\n                <th scope=\"row\">{{ dogodek.datum | date:'d. M. yyyy' }}</th>\r\n                <th scope=\"row\" class=\"hour-column\">{{ dogodek.ura }}</th>\r\n                <th scope=\"row\"><a class=\"text-primary\" routerLink=\"/instrukcije-dogodki/dogodek/{{ dogodek._id }}\">{{\r\n                        dogodek.naziv }}</a></th>\r\n            </tr>\r\n            <tr *ngFor=\"let delo of uporabnik.dela\">\r\n                <th scope=\"row\">{{ delo.datum | date:'d. M. yyyy' }}</th>\r\n                <th scope=\"row\" class=\"hour-column\">-</th>\r\n                <th scope=\"row\"><a class=\"text-primary\" routerLink=\"/ponudba-del/delo/{{ delo._id }}\">{{\r\n                        delo.naziv }}</a></th>\r\n            </tr>\r\n        </tbody>\r\n        <ng-template #niObveznosti>\r\n            <tbody>\r\n                <th scope=\"row\" colspan=\"3\">Nimate še obveznosti. Prijavite se na dogodek ali delo.</th>\r\n            </tbody>\r\n        </ng-template>\r\n    </table>\r\n</div>\r\n\r\n<div *ngIf=\"covidInfo else obvestilo\">\r\n    <div id=\"covid\" class=\"container\">\r\n        <h2 id=\"covid-info\">Skupno število okužb z Covid-19 v Sloveniji: {{ getCasesToday() }}</h2>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n<div *ngIf=\"chart\" class=\"container\">\r\n    <canvas id=\"canvas\">\r\n        {{ chart }}\r\n    </canvas>\r\n</div>\r\n\r\n<ng-template #obvestilo>\r\n    <div style=\"margin-top: 2rem;\" class=\"alert alert-info container\" role=\"alert\">\r\n        {{ sporocilo }}\r\n    </div>\r\n</ng-template>\r\n\r\n<get-started></get-started>\r\n\r\n<div id=\"dashboard-featured\">\r\n\r\n    <div id=\"featuredInstructors\" class=\"carousel slide featured-carousel\" data-ride=\"carousel\"\r\n        *ngIf=\"featuredInstructors.length>0\">\r\n\r\n        <div class=\"carousel-inner featured-carousel-inner bg-dark\">\r\n            <h4 class=\"text-light\">Novi inštruktorji</h4>\r\n            <div class=\"carousel-item\" *ngFor=\"let instructor of featuredInstructors; let isFirst = first\"\r\n                [class.active]=\"isFirst\">\r\n                <div class=\"card featured-instructor\">\r\n                    <img class=\"card-img-top\" src=\"../../../../assets/media/thumbnails/blue.png\" alt=\"Card image cap\">\r\n                    <div class=\"card-body featured-card-body\">\r\n                        <h5 class=\"card-title\"><a *ngIf=\"instructor.email\"\r\n                                routerLink=\"/profil/{{ instructor.email }}\">{{ instructor.ime }} {{ instructor.priimek\r\n                                }}</a></h5>\r\n                        <p class=\"card-text\">{{ instructor.opis }}</p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <a class=\"carousel-control-prev featured-controls featured-controls-prev\" href=\"#featuredInstructors\"\r\n                role=\"button\" data-slide=\"prev\">\r\n                <span class=\"carousel-control-prev-icon featured-controls-icons\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a class=\"carousel-control-next featured-controls featured-controls-next\" href=\"#featuredInstructors\"\r\n                role=\"button\" data-slide=\"next\">\r\n                <span class=\"carousel-control-next-icon featured-controls-icons\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Next</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"featuredEvents\" class=\"carousel slide featured-carousel\" data-ride=\"carousel\"\r\n        *ngIf=\"featuredEvents.length>0\">\r\n        <div class=\"carousel-inner featured-carousel-inner bg-dark\">\r\n            <h4 class=\"text-light\">Prihajajoči dogodki</h4>\r\n            <div class=\"carousel-item\" *ngFor=\"let event of featuredEvents; let isFirst = first\"\r\n                [class.active]=\"isFirst\">\r\n                <div class=\"card featured-instructor\">\r\n                    <img class=\"card-img-top\" src=\"../../../../assets/media/thumbnails/green.png\" alt=\"Card image cap\">\r\n                    <div class=\"card-body featured-card-body\">\r\n                        <h5 class=\"card-title\"><a *ngIf=\"event._id\"\r\n                                routerLink=\"/instrukcije-dogodki/dogodek/{{ event._id }}\">{{ event.naziv }}</a></h5>\r\n                        <p class=\"card-text\">{{ event.opis }}</p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <a class=\"carousel-control-prev featured-controls featured-controls-prev\" href=\"#featuredEvents\"\r\n                role=\"button\" data-slide=\"prev\">\r\n                <span class=\"carousel-control-prev-icon featured-controls-icons\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a class=\"carousel-control-next featured-controls featured-controls-next\" href=\"#featuredEvents\"\r\n                role=\"button\" data-slide=\"next\">\r\n                <span class=\"carousel-control-next-icon featured-controls-icons\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Next</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div id=\"featuredJobs\" class=\"carousel slide featured-carousel\" data-ride=\"carousel\"\r\n        *ngIf=\"featuredOffers.length>0\">\r\n        <div class=\"carousel-inner featured-carousel-inner bg-dark\">\r\n            <h4 class=\"text-light\">Promovirane ponudbe</h4>\r\n            <div class=\"carousel-item\" *ngFor=\"let offer of featuredOffers; let isFirst = first\"\r\n                [class.active]=\"isFirst\">\r\n                <div class=\"card featured-instructor\">\r\n                    <img class=\"card-img-top\" src=\"../../../../assets/media/thumbnails/red.png\" alt=\"Card image cap\">\r\n                    <div class=\"card-body featured-card-body\">\r\n                        <h5 class=\"card-title\"><a *ngIf=\"offer._id\" routerLink=\"/ponudba-del/delo/{{ offer._id }}\">{{\r\n                                offer.naziv }}</a></h5>\r\n                        <p class=\"card-text\">{{ offer.opis }}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <a class=\"carousel-control-prev featured-controls featured-controls-prev\" href=\"#featuredJobs\" role=\"button\"\r\n                data-slide=\"prev\">\r\n                <span class=\"carousel-control-prev-icon featured-controls-icons\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a class=\"carousel-control-next featured-controls featured-controls-next\" href=\"#featuredJobs\" role=\"button\"\r\n                data-slide=\"next\">\r\n                <span class=\"carousel-control-next-icon featured-controls-icons\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Next</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { InstructionsService } from '../../services/instructions.service';\r\nimport { JobsService } from '../../services/jobs.service';\r\nimport { CommentsService } from '../../services/comments.service';\r\nimport { CommentsJobsService } from '../../services/comments-jobs.service';\r\n\r\nimport users from './test/users-testni.json'\r\nimport events from './test/instrukcije-testni.json';\r\nimport offers from './test/dela-testni.json'\r\n\r\n@Component({\r\n  selector: 'app-db',\r\n  templateUrl: './db.component.html',\r\n  styleUrls: ['./db.component.css']\r\n})\r\nexport class DbComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private instructionsService: InstructionsService,\r\n    private jobsService: JobsService,\r\n    private commentsService: CommentsService,\r\n    private commentsJobsService: CommentsJobsService\r\n  ) { }\r\n\r\n  users = users;\r\n  events = events;\r\n  offers = offers;\r\n  sporocilo = \"\";\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public fillDB = async () => {\r\n    // console.log(this.users);\r\n    // console.log(this.events);\r\n    // console.log(this.offers);\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      // console.log(\"Registering...\");\r\n      let doesUserExist = null;\r\n      await this.authenticationService.getUser(this.users[i].email)\r\n        .then((user) => { doesUserExist = user; })\r\n        .catch((err) => { doesUserExist = null; });\r\n      if (doesUserExist != null) {\r\n        continue;\r\n      } else {\r\n        await this.authenticationService.register(this.users[i]);\r\n        let currentUserEmail = this.users[i].email;\r\n        // console.log(currentUserEmail);\r\n        // console.log(\"registered!\");\r\n        for (let j = 0; j < this.events.length; j++) {\r\n          // console.log(events[j].emailInstruktorja);\r\n          if (currentUserEmail == this.events[j].emailInstruktorja) {\r\n            // console.log(\"Posting event...\");\r\n            let date = new Date(this.events[j].datestring);\r\n            this.events[j].datum = date;\r\n            await this.instructionsService.postNewEvent(this.events[j])\r\n              .then((res) => {\r\n                if (this.events[j].komentarji) {\r\n                  for (let g = 0; g < this.events[j].komentarji.length; g++) {\r\n                    this.commentsService.postNewComment(res, this.events[j].komentarji[g]);\r\n                  }\r\n                }\r\n              });\r\n            // console.log(\"Posted!\");\r\n          }\r\n        }\r\n        for (let k = 0; k < this.offers.length; k++) {\r\n          if (currentUserEmail == this.offers[k].emailPonudnika) {\r\n            // console.log(\"Posting job...\");\r\n            let date = new Date(this.offers[k].datestring);\r\n            this.offers[k].datum = date;\r\n            await this.jobsService.postNewJob(this.offers[k])\r\n              .then((res) => {\r\n                if (this.offers[k].komentarji) {\r\n                  for (let g = 0; g < this.offers[k].komentarji.length; g++) {\r\n                    this.commentsJobsService.postNewComment(res, this.offers[k].komentarji[g]);\r\n                  }\r\n                }\r\n              });\r\n            // console.log(\"Posted!\");\r\n          }\r\n        }\r\n        // console.log(\"Logging out...\");\r\n        await this.authenticationService.logout();\r\n        // console.log(\"Logged out!\");\r\n      }\r\n    }\r\n    location.reload();\r\n    alert(\"Vsi testni podatki so bili uspešno vneseni!\");\r\n  };\r\n\r\n  public dropDB = () => {\r\n    // console.log(\"Dropping DB...\");\r\n    this.authenticationService.dropDB()\r\n    .then((response) => this.sporocilo = response.sporočilo)\r\n    .catch((error) => {this.sporocilo = \"Napaka v API-ju.\"});\r\n  };\r\n\r\n  public dropUsers = () => {\r\n    // console.log(\"Dropping DB...\");\r\n    this.authenticationService.dropUsers()\r\n    .then((response) => this.sporocilo = response.sporočilo)\r\n    .catch((error) => {this.sporocilo = \"Napaka v API-ju.\"});\r\n  };\r\n\r\n  public refreshPage(): void {\r\n    location.reload();\r\n    window.stop();\r\n    location.reload();\r\n  }\r\n}\r\n","<div id=\"db\">\r\n    <div class=\"buttons\">\r\n        <a class=\"db-btn btn btn-outline-dark\" (click)=\"fillDB()\">Uvozi podatke</a>\r\n        <button class=\"btn btn-secondary\" (click)=\"refreshPage()\">Osveži stran</button>\r\n        <div class=\"alert alert-primary\" role=\"alert\">\r\n            Po vsakem kliku na gumb za uvoz podatkov, prosimo osvežite stran in kliknite še enkrat,\r\n            dokler se vam ne prikaže obvestilo, da ste uspešno vnesli vse podatke.\r\n        </div>\r\n        <div class=\"alert alert-success\" *ngIf=\"sporocilo\">\r\n            {{ sporocilo }}\r\n        </div>\r\n        <a class=\"db-btn btn btn-outline-dark\" (click)=\"dropDB()\">Izbriši podatke</a>\r\n        <a class=\"db-btn btn btn-outline-dark\" (click)=\"dropUsers()\">Izbriši uporabnike</a>\r\n    </div>\r\n\r\n\r\n    <style>\r\n        body {\r\n            background: azure !important;\r\n        }\r\n\r\n        .buttons {\r\n            width: 50%;\r\n            margin: auto;\r\n        }\r\n\r\n        .db-btn {\r\n            width: 100%;\r\n            margin-top: 5rem;\r\n            padding: 3rem;\r\n        }\r\n\r\n        button {\r\n            margin: 0.5rem;\r\n            margin-left: 0;\r\n        }\r\n    </style>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { InstructionsService} from '../../../services/instructions.service';\r\n\r\nimport { InstructionsEvent } from '../../../classes/event';\r\nimport { AuthenticationService } from 'src/app/common/services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { ThemeService } from 'ng2-charts';\r\nimport { User } from 'src/app/common/classes/user';\r\n\r\n@Component({\r\n  selector: 'app-event-new',\r\n  templateUrl: './event-new.component.html',\r\n  styleUrls: ['./event-new.component.css']\r\n})\r\nexport class EventNewComponent implements OnInit {\r\n\r\n  constructor(\r\n    private instructionsService: InstructionsService,\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public sporocilo = \"\";\r\n\r\n  public novDogodek = {\r\n    _id: \"\",\r\n    naziv: \"\",\r\n    opis: \"\",\r\n    cena: null,\r\n    datum: null,\r\n    ura: \"\",\r\n    steviloProstihMest: null,\r\n    emailInstruktorja: \"\",\r\n    komentarji: null\r\n  };\r\n\r\n  postNewEvent(): void {\r\n    this.novDogodek.emailInstruktorja = this.authenticationService.getCurrentUser().email;\r\n\r\n    if(!this.novDogodek.naziv || \r\n      !this.novDogodek.opis || \r\n      !this.novDogodek.cena || \r\n      !this.novDogodek.datum || \r\n      !this.novDogodek.ura || \r\n      !this.novDogodek.steviloProstihMest) {\r\n      this.sporocilo = \"Prosimo izpolnite vsa polja!\"\r\n    } else {\r\n      this.instructionsService.postNewEvent(this.novDogodek)\r\n      .then(event => {\r\n        this.novDogodek = event;\r\n        this.sporocilo = event ? \"Dogodek uspešno objavljen :)\" : \"Napaka pri objavi dogodka :(\"\r\n        this.router.navigateByUrl('/instrukcije-dogodki/dogodek/' + this.novDogodek._id);\r\n        alert(\"Dogodek uspešno objavljen!\");\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = \"Napaka API-ja pri objavi dogodka.\"\r\n        //console.error(error);\r\n      });\r\n    } \r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n\r\n  public isInstructor(): boolean {\r\n    if(this.getCurrentUser().statusInstruktorja) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getCurrentUser(): User {\r\n    return(this.authenticationService.getCurrentUser());\r\n  }\r\n\r\n}\r\n","<div style=\"margin-top: 2rem;\" class=\"alert alert-info container\" role=\"alert\" *ngIf=\"!isLoggedIn() else jeInstruktor\">\r\n  Za objavo dogodka se prosim <a routerLink=\"/prijava\">prijavite</a>.\r\n</div>\r\n\r\n<ng-template #jeInstruktor>\r\n  <div style=\"margin-top: 2rem;\" class=\"alert alert-info container\" role=\"alert\" *ngIf=\"!isInstructor() else obrazec\">\r\n    Za objavo dogodka morate imeti status inštruktorja. Za pridobitev le-tega, pojdite na vaš <a\r\n      routerLink=\"/profil/{{ getCurrentUser().email }}\">profil</a>.\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #obrazec>\r\n  <div class=\"container\">\r\n    <div class=\"row\" style=\"padding-top: 30px;\">\r\n      <div class=\"col\">\r\n        <h1>Objavi oglas za inštrukcijski dogodek</h1>\r\n        <p><i>Izpolnite spodnje podatke in objavite oglas za inštrukcije, s katerimi lahko širite svoje\r\n            znanje.</i></p>\r\n        <hr>\r\n        <form id=\"instructionsEventNewPost\" action=\"\" role=\"form\">\r\n          <div class=\"form-group\">\r\n            <label for=\"naziv\">Ime dogodka</label>\r\n            <input [(ngModel)]=\"novDogodek.naziv\" id=\"naziv\" name=\"naziv\" type=\"text\" class=\"form-control\"\r\n              placeholder=\"Poimenujte vaš dogodek...\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"opis\">Opis dogodka</label>\r\n            <textarea [(ngModel)]=\"novDogodek.opis\" class=\"form-control\" id=\"opis\" name=\"opis\" rows=\"5\"\r\n              placeholder=\"Vnesite dodatne informacije o dogodku...\"></textarea>\r\n          </div>\r\n\r\n          <label for=\"cena\">Cena dogodka</label>\r\n          <div class=\"form-group input-group\">\r\n            <input [(ngModel)]=\"novDogodek.cena\" id=\"cena\" name=\"cena\" type=\"number\" class=\"form-control\" value=\"0\"\r\n              step=\"0.1\" min=\"0\" onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\">\r\n            <div class=\"input-group-append\">\r\n              <span class=\"input-group-text\" id=\"basic-addon2\">€</span>\r\n            </div>\r\n          </div>\r\n          <p><i>Plačljivi dogodki oziroma inštrukcije se plačajo po dogovoru. V primeru zlorabe bomo proti\r\n              kršitelju ustrezno ukrepali.</i></p>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"datum\">Datum dogodka</label>\r\n            <input [(ngModel)]=\"novDogodek.datum\" type=\"date\" class=\"form-control\" id=\"datum\" name=\"datum\">\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"ura\">Ura dogodka</label>\r\n            <input [(ngModel)]=\"novDogodek.ura\" type=\"time\" class=\"form-control\" id=\"ura\" name=\"ura\">\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"steviloProstihMest\">Maksimalno število udeležencev</label>\r\n            <input [(ngModel)]=\"novDogodek.steviloProstihMest\" id=\"steviloProstihMest\" name=\"steviloProstihMest\"\r\n              type=\"number\" class=\"form-control\" placeholder=\"Vnesite celo število\" step=\"1\" min=\"1\" value=\"1\"\r\n              onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\">\r\n          </div>\r\n\r\n          <div class=\"alert alert-warning container\" style=\"margin-top: 2rem\" *ngIf=\"sporocilo\">{{ sporocilo\r\n            }} <a routerLink=\"/instrukcije-dogodki\">Vrni se na seznam dogodkov.</a></div>\r\n\r\n          <button class=\"btn btn-primary\" (click)=\"postNewEvent()\">Objavi</button>\r\n          <hr>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { JobsService } from '../../../services/jobs.service';\r\n\r\nimport { Job } from '../../../classes/job';\r\nimport { AuthenticationService } from 'src/app/common/services/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { ThemeService } from 'ng2-charts';\r\nimport { User } from 'src/app/common/classes/user';\r\n\r\n@Component({\r\n  selector: 'app-offer-new',\r\n  templateUrl: './offer-new.component.html',\r\n  styleUrls: ['./offer-new.component.css']\r\n})\r\nexport class OfferNewComponent implements OnInit {\r\n\r\n  constructor(\r\n    private jobsService: JobsService,\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public sporocilo = \"\";\r\n\r\n  public novoDelo = {\r\n    _id: \"\",\r\n    naziv: \"\",\r\n    opis: \"\",\r\n    cena: null,\r\n    datum: null,\r\n    emailPonudnika: \"\",\r\n    zasedeno: false,\r\n    komentarji: null\r\n  }\r\n\r\n  postNewJob(): void {\r\n    this.novoDelo.emailPonudnika = this.authenticationService.getCurrentUser().email;\r\n\r\n    if (!this.novoDelo.naziv ||\r\n      !this.novoDelo.opis ||\r\n      !this.novoDelo.cena ||\r\n      !this.novoDelo.datum) {\r\n      this.sporocilo = \"Prosimo izpolnite vsa polja!\"\r\n    } else {\r\n      this.jobsService.postNewJob(this.novoDelo)\r\n      .then(job => {\r\n        this.novoDelo = job;\r\n        this.sporocilo = job ? \"Delo uspešno objavljeno!\" : \"Napaka pri objavi dela :(\";\r\n        this.router.navigateByUrl('/ponudba-del/delo/' + this.novoDelo._id);\r\n        alert(\"Dogodek uspešno objavljen!\");\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = \"Napaka API-ja pri objavi dela.\";\r\n      });\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n\r\n  public getCurrentUser(): User {\r\n    return(this.authenticationService.getCurrentUser());\r\n  }\r\n\r\n}\r\n","<div style=\"margin-top: 2rem;\" class=\"alert alert-info container\" role=\"alert\" *ngIf=\"!isLoggedIn()\">\r\n  Za objavo dogodka se prosim <a routerLink=\"/prijava\">prijavite</a>.\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <div class=\"row\" style=\"padding-top: 30px;\">\r\n    <div class=\"col\">\r\n      <h1>Objavi oglas za delo</h1>\r\n      <p><i>Izpolni spodnje podatke in objavi oglas za delo, na katerega se bodo lahko prijavili ustrezni\r\n          kandidati. </i></p>\r\n      <hr>\r\n      <form id=\"jobNewPost\" method=\"post\" action=\"\" role=\"form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"naziv\">Naziv dela</label>\r\n          <input [(ngModel)]=\"novoDelo.naziv\" id=\"naziv\" name=\"naziv\" type=\"text\" class=\"form-control\"\r\n            placeholder=\"Kakšno delo ponujaš?\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"opis\">Opis dela</label>\r\n          <textarea [(ngModel)]=\"novoDelo.opis\" id=\"opis\" name=\"opis\" class=\"form-control\" rows=\"5\"\r\n            placeholder=\"Napiši informacije o delu\"></textarea>\r\n        </div>\r\n        <label for=\"cena\">Plačilo, ki ga ponujam</label>\r\n        <div class=\"form-group input-group\">\r\n          <input [(ngModel)]=\"novoDelo.cena\" id=\"cena\" name=\"cena\" type=\"number\" class=\"form-control\" value=\"0\"\r\n            step=\"0.1\" min=\"0\" onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\">\r\n          <div class=\"input-group-append\">\r\n            <span class=\"input-group-text\" id=\"basic-addon2\">€</span>\r\n          </div>\r\n        </div>\r\n        <p><i>Plačljiva dela se plačajo po dogovoru. V primeru zlorabe bomo proti kršitelju ustrezno ukrepali.</i></p>\r\n        <div class=\"form-group\">\r\n          <label for=\"datum\">Datum</label>\r\n          <input [(ngModel)]=\"novoDelo.datum\" id=\"datum\" name=\"datum\" type=\"date\" class=\"form-control\">\r\n        </div>\r\n\r\n        <div class=\"alert alert-warning container\" style=\"margin-top: 2rem\" *ngIf=\"sporocilo\">{{ sporocilo\r\n          }} <a routerLink=\"/ponudba-del\">Vrni se na seznam dogodkov.</a></div>\r\n\r\n        <button class=\"btn btn-primary\" (click)=\"postNewJob()\">Objavi</button>\r\n        <hr>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public sporocilo = \"\";\r\n\r\n  public loginData = {\r\n    _id: null,\r\n    ime: \"\",\r\n    priimek: \"\",\r\n    email: \"\",\r\n    geslo: \"\",\r\n    statusInstruktorja: false,\r\n    opis: \"\",\r\n    telefonskaStevilka: null,\r\n    dogodki: null,\r\n    dela: null,\r\n    ocena: null,\r\n    poslanaSporocila: null,\r\n    kontakti: null\r\n    //datumVpisa: null\r\n  }\r\n\r\n  public loading = false;\r\n\r\n  public passwordResetEmail = \"\";\r\n\r\n  public submitLoginData(): void {\r\n    if (\r\n      !this.loginData.email ||\r\n      !this.loginData.geslo\r\n    ) {\r\n      this.sporocilo = \"Zahtevani so vsi podatki, prosim poskusite znova!\";\r\n    } else {\r\n      this.loading = true;\r\n      this.executeLogin();\r\n    }\r\n  }\r\n\r\n  private executeLogin(): void {\r\n    this.authenticationService\r\n      .login(this.loginData)\r\n      .then(() => {\r\n        this.router.navigateByUrl(\"/my\")\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = error\r\n      });\r\n  }\r\n}\r\n","<div id=\"hero\">\r\n  <!--VideoBG-->\r\n  <video loop muted autoplay poster=\"../../../../assets/media/backgrounds/welcome_poster.png\" id=\"bg-video\">\r\n    <source src=\"../../../../assets/media/backgrounds/welcome_video.mp4\" type=\"video/mp4\">\r\n  </video>\r\n\r\n  <!--Overlay-->\r\n  <div id=\"overlay\"></div>\r\n\r\n  <!--Login Form-->\r\n  <div class=\"container form-container\" id=\"signing-form-container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mx-auto\">\r\n        <div class=\"formSign form\" data-aos=\"zoom-in\">\r\n          <div class=\"logo mb-3\">\r\n            <div class=\"col-md-12 text-center\">\r\n              <h1>Prijava</h1>\r\n            </div>\r\n          </div>\r\n          <form id=\"loginUser\" (submit)=\"submitLoginData()\">\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email</label>\r\n              <input [(ngModel)]=\"loginData.email\" type=\"email\" name=\"email\" class=\"form-control\" id=\"email\"\r\n                aria-describedby=\"emailHelp\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"geslo\">Geslo</label>\r\n              <input [(ngModel)]=\"loginData.geslo\" type=\"password\" name=\"geslo\" id=\"geslo\" class=\"form-control\">\r\n            </div>\r\n\r\n            <!--Warning-->\r\n            <div class=\"alert alert-warning container\" style=\"margin-top: 2rem\" *ngIf=\"sporocilo\">{{ sporocilo }}</div>\r\n\r\n            <!-- <div class=\"form-group\">\r\n              <p class=\"text-center\"><a data-target=\"#resetPass\" data-toggle=\"modal\">Pozabljeno geslo?</a></p>\r\n            </div> -->\r\n            <div class=\"col-md-12 text-center \">\r\n              <button type=\"submit\" id=\"login-button\" class=\"btn btn-block mybtn btn-primary\">Prijava</button>\r\n            </div>\r\n            <div class=\"alert alert-info\" *ngIf=\"loading\">\r\n              Prijava poteka...\r\n            </div>\r\n            <div class=\"col-md-12 \">\r\n              <hr>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <p class=\"text-center\">Še nisi registriran? <a routerLink=\"/registracija\" id=\"signup\">Pridruži\r\n                  se zdaj!</a></p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--Forgotgeslo modal-->\r\n<div class=\"modal fade\" id=\"resetPass\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"modalnoOkno\">Pozabljeno geslo</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>Vnesite email s katerim ste se registrirali. Navodila za spremembo gesla vam bodo poslana na\r\n          email.</p>\r\n        <form name=\"passReset\">\r\n          <div class=\"form-group\">\r\n            <input type=\"email\" name=\"help-email\" placeholder=\"Email\" class=\"form-control\" id=\"help-email\"\r\n              aria-describedby=\"emailHelp\">\r\n          </div>\r\n          <button class=\"btn mybtn btn-secondary\" type=\"submit\">Pošlji</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-messaging',\r\n  templateUrl: './messaging.component.html',\r\n  styleUrls: ['./messaging.component.css']\r\n})\r\nexport class MessagingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>messaging works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LandingComponent } from '../../common/components/landing/landing.component';\r\nimport { LoginComponent } from 'src/app/common/components/login/login.component';\r\nimport { RegisterComponent } from 'src/app/common/components/register/register.component';\r\nimport { DashboardComponent } from 'src/app/common/components/dashboard/dashboard.component';\r\nimport { InstructorsComponent } from 'src/app/common/components/instructions/instructors/instructors.component';\r\nimport { EventsComponent } from 'src/app/common/components/instructions/events/events.component';\r\nimport { EventInfoComponent } from 'src/app/common/components/instructions/event-info/event-info.component';\r\nimport { OffersComponent } from 'src/app/common/components/jobs/offers/offers.component';\r\nimport { OfferInfoComponent } from 'src/app/common/components/jobs/offer-info/offer-info.component';\r\nimport { ProfileComponent } from 'src/app/common/components/profile/profile.component';\r\nimport { EventNewComponent } from 'src/app/common/components/instructions/event-new/event-new.component';\r\nimport { MessagingComponent } from 'src/app/common/components/messaging/messaging.component';\r\nimport { OfferNewComponent } from 'src/app/common/components/jobs/offer-new/offer-new.component';\r\nimport { KontaktiComponent } from 'src/app/common/components/chat/kontakti/kontakti.component';\r\nimport { DbComponent } from 'src/app/common/components/db/db.component';\r\n\r\nconst poti: Routes = [\r\n  {\r\n    path: '',\r\n    component: LandingComponent\r\n  },\r\n  {\r\n    path: 'prijava',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'registracija',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: 'my',\r\n    component: DashboardComponent\r\n  },\r\n  {\r\n    path: 'instruktorji',\r\n    component: InstructorsComponent\r\n  },\r\n  {\r\n    path: 'instrukcije-dogodki',\r\n    component: EventsComponent\r\n  },\r\n  {\r\n    path: 'instrukcije-dogodki/dogodek/:idDogodka',\r\n    component: EventInfoComponent\r\n  },\r\n  {\r\n    path: 'instrukcije-dogodki/dodaj',\r\n    component: EventNewComponent\r\n  },\r\n  {\r\n    path: 'ponudba-del',\r\n    component: OffersComponent\r\n  },\r\n  {\r\n    path: 'ponudba-del/delo/:idDela',\r\n    component: OfferInfoComponent\r\n  },\r\n  {\r\n    path: 'ponudba-del/dodaj',\r\n    component: OfferNewComponent\r\n  },\r\n  {\r\n    path: 'profil/:emailUporabnika',\r\n    component: ProfileComponent\r\n  },\r\n  {\r\n    path: 'sporocanje',\r\n    component: KontaktiComponent\r\n  },\r\n  {\r\n    path: 'db',\r\n    component: DbComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(poti)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { User } from '../classes/user';\r\nimport { Job } from '../classes/job';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { BROWSER_CACHE } from '../classes/cache';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobsService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authenticationService: AuthenticationService,\r\n    @Inject(BROWSER_CACHE) private cache: Storage  \r\n  ) { }\r\n\r\n  private apiUrl: string = environment.apiUrl;\r\n\r\n  public getJobs(): Promise<Job[]> {\r\n    const url: string = `${this.apiUrl}/ponudba-del`;\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => response as Job[])\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public getJobInfo(jobID: string): Promise<Job> {\r\n    const url: string = `${this.apiUrl}/ponudba-del/delo/${jobID}`;\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => response as Job)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public postNewJob(job: Job): Promise<any> {\r\n    const url: string = `${this.apiUrl}/ponudba-del`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .post(url, job, httpProperties)\r\n      .toPromise()\r\n      .then(response => response as any)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public editJobInfo(job: Job): Promise<Job> {\r\n    const url: string = `${this.apiUrl}/ponudba-del/delo/${job._id}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .put(url, job, httpProperties)\r\n      .toPromise()\r\n      .then(response => response as Job)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public deleteJob(jobID: string): Observable<void> {\r\n    const url: string = `${this.apiUrl}/ponudba-del/delo/${jobID}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .delete<void>(url, httpProperties)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  public signUp(jobID: string): Promise<any> {\r\n    const currentUserEmail = this.authenticationService.getCurrentUser().email;\r\n    const url: string = `${this.apiUrl}/ponudba-del/delo/${jobID}/prijava`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n    .post(url, {currentUserEmail}, httpProperties)\r\n    .toPromise()\r\n    .then(response => response as any)\r\n    .catch(this.handleError);\r\n  }\r\n\r\n  public getJobHost(userID: string): Promise<User> {\r\n    const url: string = `${this.apiUrl}/uporabnik/${userID}`;\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => response as User)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(napaka: any): Promise<any> {\r\n    console.error('Prišlo je do napake', napaka);\r\n    return Promise.reject(napaka.message || napaka);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxPaginationModule } from 'ngx-pagination'\r\nimport { OrderModule } from 'ngx-order-pipe'\r\n\r\nimport { AppRoutingModule} from './modules/app-routing/app-routing.module';\r\n\r\nimport { MainComponent } from './common/components/main/main.component';\r\nimport { LandingComponent } from './common/components/landing/landing.component';\r\nimport { NavbarComponent } from './common/components/navbar/navbar.component';\r\nimport { FooterComponent } from './common/components/footer/footer.component';\r\nimport { LoginComponent } from './common/components/login/login.component';\r\nimport { RegisterComponent } from './common/components/register/register.component';\r\nimport { DashboardComponent } from './common/components/dashboard/dashboard.component';\r\nimport { MessagingComponent } from './common/components/messaging/messaging.component';\r\nimport { InstructorsComponent } from './common/components/instructions/instructors/instructors.component';\r\nimport { EventsComponent } from './common/components/instructions/events/events.component';\r\nimport { EventInfoComponent } from './common/components/instructions/event-info/event-info.component';\r\nimport { EventNewComponent } from './common/components/instructions/event-new/event-new.component';\r\nimport { OffersComponent } from './common/components/jobs/offers/offers.component';\r\nimport { OfferInfoComponent } from './common/components/jobs/offer-info/offer-info.component';\r\nimport { OfferNewComponent } from \"./common/components/jobs/offer-new/offer-new.component\";\r\nimport { ProfileComponent } from './common/components/profile/profile.component';\r\nimport { GetStartedComponent } from './common/components/get-started/get-started.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { KontaktiComponent } from './common/components/chat/kontakti/kontakti.component';\r\nimport { SporocilaComponent } from './common/components/chat/sporocila/sporocila.component';\r\nimport { SortirajSporocilaPipe } from './common/pipes/sortiraj-sporocila.pipe';\r\nimport { CasPipe } from './common/pipes/cas.pipe';\r\nimport { LettersPipe } from './common/pipes/letters.pipe';\r\nimport { KomentarjiSeznamComponent } from './common/components/komentarji/komentarji-seznam/komentarji-seznam.component';\r\nimport { KomentarjiSeznamDelaComponent } from './common/components/komentarji/komentarji-seznam-dela/komentarji-seznam-dela.component';\r\nimport { DbComponent } from './common/components/db/db.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MainComponent,\r\n    LandingComponent,\r\n    NavbarComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    DashboardComponent,\r\n    MessagingComponent,\r\n    InstructorsComponent,\r\n    EventsComponent,\r\n    EventInfoComponent,\r\n    EventNewComponent,\r\n    OffersComponent,\r\n    OfferInfoComponent,\r\n    OfferNewComponent,\r\n    ProfileComponent,\r\n    GetStartedComponent,\r\n    KontaktiComponent,\r\n    SporocilaComponent,\r\n    SortirajSporocilaPipe,\r\n    CasPipe,\r\n    LettersPipe,\r\n    KomentarjiSeznamComponent,\r\n    KomentarjiSeznamDelaComponent,\r\n    DbComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    NgxPaginationModule,\r\n    OrderModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [MainComponent]\r\n})\r\n\r\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { User, Sporocila } from '../../../classes/user';\r\nimport { ChatService } from '../../../services/chat.service'; //ubistvu importas class ChatService\r\nimport { AuthenticationService } from 'src/app/common/services/authentication.service';\r\n\r\n \r\n@Component({\r\n  selector: 'app-kontakti',\r\n  templateUrl: './kontakti.component.html',\r\n  styleUrls: ['./kontakti.component.css']\r\n})\r\nexport class KontaktiComponent implements OnInit {\r\n\r\n  constructor(private chatStoritev: ChatService, private authenticationService: AuthenticationService) { }\r\n\r\n  public podatkiKontakti: any;\r\n  public podatkiSporocila: any;\r\n  public showForm: boolean = false;\r\n\r\n  public novKontakt: any = {\r\n    emailKontakta: ''\r\n  }\r\n\r\n  public onClickForm(): void {\r\n    this.showForm = true;\r\n  }\r\n\r\n  public dodajNovKontakt(): void {\r\n    this.obrazecNapaka = \"\";\r\n    if (this.soPodatkiUstrezni()) {\r\n      \r\n      // console.log(\"this.novKontakt.emailKontakta\" + this.novKontakt.emailKontakta);\r\n      this.chatStoritev\r\n        .posljiKontakt(this.authenticationService.getCurrentUser().email, this.novKontakt)\r\n        .then(kontakt => {\r\n          // console.log(\"Kontakt shranjen\", kontakt);\r\n          this.novKontakt.emailKontakta = '';\r\n          this.kliciPridobiKontakte();\r\n          this.showForm = false;\r\n        })\r\n        .catch(napaka => this.obrazecNapaka = napaka);\r\n    } else {\r\n      this.obrazecNapaka = \"Prosim vnesite sporočilo\";\r\n    }\r\n  }\r\n\r\n  public obrazecNapaka: string;\r\n\r\n  private soPodatkiUstrezni(): boolean {\r\n    if (this.novKontakt.emailKontakta) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  private kliciPridobiKontakte(): void {\r\n    this.chatStoritev\r\n        .pridobiKontakte(this.authenticationService.getCurrentUser().email)\r\n        .then(servicePodatki => {this.podatkiKontakti = servicePodatki\r\n          // for(var i = 0; i < this.podatkiKontakti.pridobljeniKontakti.length; i++){\r\n          //   console.log(\"kontakt \" + i + \" \" + this.podatkiKontakti.pridobljeniKontakti[i].ime)\r\n          // }\r\n      });\r\n        \r\n      }\r\n      \r\n      public kliciPridobiSporocila(idPrejmenika: string): void {\r\n        this.chatStoritev\r\n        .pridobiSporocila(this.authenticationService.getCurrentUser().email, idPrejmenika)\r\n        .then(servicePodatki => this.podatkiSporocila = servicePodatki);\r\n      }\r\n      \r\n      ngOnInit(): void {\r\n        this.kliciPridobiKontakte()\r\n        \r\n      }\r\n\r\n}\r\n","\r\n<div class=\"row\" style=\" height: 100vh; margin-right: 0; margin-left: 0;\" id=\"contacts\">\r\n    <div class=\"col-sm-3\" style=\"padding: 0;\">\r\n\r\n\r\n        <ul class=\"bg-dark list-group\">\r\n            <div style=\"    border: 3px;\r\n            border-color: #343a40;\r\n            border-style: solid\">\r\n\r\n\r\n                <li [ngClass]=\"{'radiusToggle' : showForm == true}\" (click)=\"onClickForm()\" class=\"posamezniKontakt\" style=\"border-radius: 17px; border-style: none; text-align: center; font-size: medium;\" class=\"list-group-item list-group-item-action\" >\r\n                    +\r\n                </li>      \r\n    \r\n                <form style=\"background: white;\r\n                border-radius: 0px 0px 17px 17px;\"(ngSubmit)=\"dodajNovKontakt()\" method=\"post\" *ngIf=\"showForm\" class=\"formZaKontakte\">\r\n                Dodaj kontakt z elektronsko pošto: \r\n                \r\n                <input [(ngModel)]=\"novKontakt.emailKontakta\" type=\"text\" name=\"emailKontakta\"  placeholder=\" Vnesi email\" autocomplete=\"off\">\r\n                <button style=\"margin-left: 0.5rem;\" class=\"btn btn-info\" type=\"submit\">Dodaj</button>\r\n                </form>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        \r\n            <div *ngIf=\"podatkiKontakti.pridobljeniKontakti.length === 0\">\r\n                <li class=\"posamezniKontakt\" style=\"border-style: none; background: #ffdd78;\" class=\"list-group-item list-group-item-action\" > \r\n                    Nimaš nobenih kontaktov.\r\n                </li>\r\n            </div>\r\n                <div *ngFor=\"let kontakt of podatkiKontakti.pridobljeniKontakti\" >\r\n\r\n                    <li class=\"posamezniKontakt\" style=\"border-style: none;\" (click)=\"kliciPridobiSporocila(kontakt._id)\" class=\"list-group-item list-group-item-action\" > \r\n                        <div class=\"krogec\">{{kontakt.ime | letters}}</div>\r\n\r\n                        {{kontakt.ime}} {{kontakt.priimek}}\r\n                    </li>\r\n                </div>\r\n        </ul>\r\n\r\n\r\n\r\n    </div>\r\n\r\n        <div class=\"col-sm-9 bg-dark\"  style=\"padding: 0;  height: 100vh;\" id=\"chatbox\">\r\n                <div *ngIf = \"podatkiSporocila\">\r\n                    <app-sporocila [sporocila] = \"podatkiSporocila\"></app-sporocila>\r\n                </div>\r\n        </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { InstructionsEvent } from '../classes/event';\r\nimport { BROWSER_CACHE } from '../classes/cache';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { Komentar } from '../../common/classes/comment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentsService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authenticationService: AuthenticationService,\r\n    @Inject(BROWSER_CACHE) private cache: Storage\r\n  ) { }\r\n\r\n  private apiUrl: string = environment.apiUrl;\r\n\r\n  /* Nov komentar */\r\n  public postNewComment(event: InstructionsEvent, comment: Komentar): Promise<any> {\r\n    // console.log(\"Podatki so prišli v service, in sicer so naslednji:\");\r\n    // console.log(event);\r\n    // console.log(comment);\r\n    const url: string = `${this.apiUrl}/instrukcije-dogodki/dogodek/${event._id}/komentarji`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .post(url, comment, httpProperties)\r\n      .toPromise()\r\n      .then(response => response as any)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public editComment(comment: Komentar, event: InstructionsEvent): Promise<Komentar> {\r\n    const url: string = `${this.apiUrl}/instrukcije-dogodki/dogodek/${event._id}/komentarji/${comment._id}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .put(url, comment, httpProperties)\r\n      .toPromise()\r\n      .then(response =>  response as any)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public deleteComment(eventID: string, commentID: string): Observable<void> {\r\n    const url: string = `${this.apiUrl}/instrukcije-dogodki/dogodek/${eventID}/komentarji/${commentID}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .delete<void>(url, httpProperties)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  /* P O P R A V I ! ! ! */\r\n  private handleError(error: any): Promise<any> {\r\n    //console.error('Error in the service.', error.error[\"sporočilo\"] || error.error.errmsg || error);\r\n    return Promise.reject(error.error[\"sporočilo\"] || error.error.errmsg || error);\r\n    // console.error(\"Error in the service\");\r\n    // return;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { InstructionsService } from '../../../services/instructions.service';\r\n\r\nimport { InstructionsEvent } from 'src/app/common/classes/event';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.css']\r\n})\r\nexport class EventsComponent implements OnInit {\r\n\r\n  constructor(private instructionsService: InstructionsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEvents();\r\n  }\r\n\r\n  public sporocilo: string = \"\";\r\n\r\n  public dogodki: InstructionsEvent[];\r\n\r\n  public page: Number = 1;\r\n\r\n  public key: string = 'id';\r\n\r\n  public reverse: boolean = false;\r\n\r\n  isci() {\r\n    var filter, list, a, txtValue, search;\r\n\r\n    search = document.getElementById(\"search\");\r\n    list = document.getElementsByClassName(\"card\");\r\n\r\n    filter = search.value.toUpperCase();\r\n\r\n    let i: number;\r\n\r\n    for (i = 0; i < list.length; i++) {\r\n      a = list[i].getElementsByClassName(\"card-title\")[0];\r\n      txtValue = a.textContent || a.innerText;\r\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n        list[i].style.display = \"\";\r\n      } else {\r\n        list[i].style.display = \"none\";\r\n      }\r\n    }\r\n  }\r\n\r\n  private getEvents(): void {\r\n    this.instructionsService.getEvents()\r\n    .then(events => {\r\n      this.dogodki = events.reverse();\r\n      this.sporocilo = events.length > 0 ? \"\" : \"Ne najdem nobenega dogodka :(\"\r\n    })\r\n    .catch(error => {\r\n      this.sporocilo = \"Napaka API-ja pri iskanju dogodkov.\"\r\n      // console.error(error);\r\n    });\r\n  }\r\n\r\n  sort() {\r\n    this.key = this.getSelectValue();\r\n  }\r\n\r\n  reverseSet() {\r\n    this.reverse = !this.reverse;\r\n  }\r\n\r\n  private getSelectValue(): string {\r\n    return (<HTMLSelectElement>document.getElementById('razvrsti')).value;\r\n  }\r\n\r\n}","<ul class=\"nav container\" id=\"ins-nav\">\r\n  <li class=\"nav-item nav-item-left-border nav-item-inactive-bg\">\r\n    <a class=\"nav-link active\" routerLink=\"/instruktorji\">Inštruktorji</a>\r\n  </li>\r\n  <li class=\"nav-item bg-info nav-item-right-border\">\r\n    <a class=\"nav-link\" routerLink=\"/instrukcije-dogodki\">Dogodki</a>\r\n</ul>\r\n\r\n<!--F i l t e r-->\r\n<div class=\"container\" id=\"filter-bar\">\r\n\r\n  <div class=\"filter-item\">\r\n    <label for=\"razvrsti\"><h5>Razvrsti po:</h5></label>\r\n    <select name=\"razvrsti\" id=\"razvrsti\" class=\"form-control\">\r\n      <option value=\"\">Izberi filter...</option>\r\n      <option value=\"datum\">Datumu</option>\r\n      <!-- <option value=\"REVdatum\">Datumu (kasnejši najprej)</option> -->\r\n      <option value=\"steviloProstihMest\">Številu prostih mest</option>\r\n      <!-- <option value=\"REVsteviloProstihMest\">Številu prostih mest (največ najprej)</option> -->\r\n      <option value=\"naziv\">Imenu</option>\r\n      <!-- <option value=\"REVnaziv\">Imenu (Z-A)</option> -->\r\n      <option value=\"cena\">Ceni</option>\r\n      <!-- <option value=\"REVcena\">Ceni (dražji najprej)</option> -->\r\n    </select>\r\n  </div>\r\n\r\n  \r\n  <button id=\"filter-btn\" value=\"Filtriraj\" class=\"btn btn-light\" (click)=\"sort()\">Filtriraj</button>\r\n\r\n  <button class=\"btn btn-light btn-order\" style=\"cursor: pointer;\" (click)=\"reverseSet()\">\r\n    <i class=\"fas fa-long-arrow-alt-up\" *ngIf=\"reverse\"></i>\r\n    <i class=\"fas fa-long-arrow-alt-down\" *ngIf=\"!reverse\"></i>\r\n  </button>\r\n\r\n\r\n\r\n</div>\r\n\r\n<!--S e a r c h  b a r-->\r\n<div class=\"input-group mb-3 container\">\r\n  <input id=\"search\" (keyup)=\"isci()\" type=\"text\" class=\"form-control\" placeholder=\"Vpiši želeno iskanje\"\r\n    aria-label=\"Iskanje\" aria-describedby=\"search-button\">\r\n  <div class=\"input-group-append\">\r\n    <button class=\"btn btn-outline-secondary btn-info\" type=\"button\" id=\"search-button\" (click)=\"isci()\">Išči</button>\r\n  </div>\r\n</div>\r\n\r\n<!--N e w-->\r\n<div class=\"new-job container\">\r\n  <a routerLink=\"dodaj\" class=\"btn btn-success\">Ustvari nov dogodek</a>\r\n</div>\r\n\r\n<!--E v e n t s-->\r\n<div class=\"alert alert-warning container\" style=\"margin-top: 2rem\" *ngIf=\"sporocilo\">{{sporocilo}}</div>\r\n\r\n<div id=\"instructors\" class=\"container\">\r\n  <div class=\"card instructor\" style=\"width: 18rem;\" *ngFor=\"let dogodek of dogodki | orderBy: key: reverse | paginate: {\r\n      id: 'pagination', itemsPerPage: 10, currentPage: page\r\n    }\">\r\n    <img class=\"card-img-top\" src=\"../../../assets/media/thumbnails/green.png\" alt=\"Card image cap\">\r\n    <div class=\"card-body\">\r\n      <h5 class=\"card-title\">{{dogodek.naziv}}</h5>\r\n      <p class=\"card-text\" style=\"height: 2rem; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\">\r\n        {{dogodek.opis}}</p>\r\n      <a href=\"/instrukcije-dogodki/dogodek/{{dogodek._id}}\" class=\"btn btn-primary\">Podrobnosti</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <pagination-controls class=\"pagination\" id=\"pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\">\r\n  </pagination-controls>\r\n</div>\r\n\r\n<hr>\r\n\r\n<get-started></get-started>","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { User, Sporocila } from '../classes/user';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { BROWSER_CACHE } from '../classes/cache';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authenticationService: AuthenticationService,\r\n    @Inject(BROWSER_CACHE) private cache: Storage  \r\n    ) { }\r\n\r\n  private apiUrl: string = environment.apiUrl;\r\n\r\n  public pridobiKontakte(email: string): Promise<any> {\r\n   \r\n    const url: string = `${this.apiUrl}/chat/${email}`;\r\n\r\n    return this.http\r\n    .get(url)\r\n    .toPromise()\r\n    .then(odgovor => odgovor)\r\n    .catch(this.obdelajNapako);\r\n  }\r\n\r\n  public pridobiSporocila(email: string, idPrejemnika: string): Promise<any> {\r\n    const url: string = `${this.apiUrl}/chat/${email}/${idPrejemnika}`;\r\n\r\n    return this.http\r\n    .get(url)\r\n    .toPromise()\r\n    .then(odgovor => odgovor)\r\n    .catch(this.obdelajNapako)\r\n  }\r\n\r\n  public posljiSporocilo(email: string, podatkiObrazca: any): Promise<any> {\r\n    const url: string = `${this.apiUrl}/chat/${email}`;\r\n\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n\r\n    return this.http\r\n    .post(url, podatkiObrazca, httpProperties)\r\n    .toPromise()\r\n    .then(odgovor => odgovor)\r\n    .catch(this.obdelajNapako)\r\n  }\r\n\r\n  public posljiKontakt(emailUporabnika: string, podatkiObrazca: any): Promise<any> {\r\n    const url: string = `${this.apiUrl}/chat/${emailUporabnika}/${podatkiObrazca.emailKontakta}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n\r\n    return this.http\r\n    .post(url, podatkiObrazca, httpProperties)\r\n    .toPromise()\r\n    .then(odgovor => odgovor)\r\n    .catch(this.obdelajNapako)\r\n  }\r\n\r\n  private obdelajNapako(napaka: any): Promise<any> {\r\n    console.error('Prišlo je do napake', napaka);\r\n    return Promise.reject(napaka.message || napaka);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public sporocilo = \"\";\r\n\r\n  public newUserData = {\r\n    _id: null,\r\n    ime: \"\",\r\n    priimek: \"\",\r\n    email: \"\",\r\n    geslo: \"\",\r\n    //gesloPotrdi: \"\",\r\n    statusInstruktorja: false,\r\n    opis: \"Novo pečeni uporabnik.\",\r\n    telefonskaStevilka: null,\r\n    dogodki: null,\r\n    dela: null,\r\n    ocena: null,\r\n    //datumVpisa: null,\r\n    poslanaSporocila: null,\r\n    kontakti: null\r\n  }\r\n\r\n  public loading = false;\r\n\r\n  public gesloPotrdi = \"\";\r\n\r\n  becomeAnInstructor(statusInstruktorja: any) {\r\n    this.newUserData.statusInstruktorja = statusInstruktorja;\r\n  }\r\n\r\n  public crkeReg = new RegExp(\"^[a-zA-ZčžćšđČŽĆŠĐ\\s]+$\");\r\n  public gesloReg = new RegExp(\"^.{8,20}$\");\r\n\r\n  public async submitRegisterData(): Promise<void> {\r\n    if (\r\n      !this.newUserData.ime ||\r\n      !this.newUserData.priimek ||\r\n      !this.newUserData.email ||\r\n      !this.newUserData.geslo ||\r\n      !this.gesloPotrdi\r\n    ) {\r\n      this.sporocilo = \"Zahtevani so vsi podatki, prosim poskusite znova!\";\r\n    } else if (this.newUserData.geslo !== this.gesloPotrdi) {\r\n      this.sporocilo = \"Vneseni gesli se ne ujemata!\";\r\n    } else if (!this.crkeReg.test(this.newUserData.ime) || !this.crkeReg.test(this.newUserData.priimek)) {\r\n      this.sporocilo = \"Ime in priimek lahko vsebujeta le črke!\"\r\n    } else if (!this.gesloReg.test(this.newUserData.geslo)) {\r\n      this.sporocilo = \"Geslo mora vsebovati 8 do 20 znakov!\"\r\n    } else {\r\n      let doesUserExist = null;\r\n      await this.authenticationService.getUser(this.newUserData.email)\r\n        .then((user) => {doesUserExist = user;})\r\n        .catch((err) => {doesUserExist = null;});\r\n      if (doesUserExist != null) {\r\n        this.sporocilo = \"Uporabnik s tem e-naslovom že obstaja.\"\r\n      } else {\r\n        this.loading = true;\r\n        this.executeRegister();\r\n      }\r\n    }\r\n  }\r\n\r\n  private executeRegister(): void {\r\n    this.authenticationService\r\n      .register(this.newUserData)\r\n      .then(() => {\r\n        this.router.navigateByUrl(\"/my\")\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = error\r\n      });\r\n  }\r\n}\r\n","<div id=\"hero\">\r\n  <!--VideoBG-->\r\n  <video loop muted autoplay poster=\"../../../../assets/media/backgrounds/welcome_poster.png\" id=\"bg-video\">\r\n    <source src=\"../../../../assets/media/backgrounds/welcome_video.mp4\" type=\"video/mp4\">\r\n  </video>\r\n\r\n  <!--Overlay-->\r\n  <div id=\"overlay\"></div>\r\n\r\n  <!--Signin Form-->\r\n  <div class=\"container form-container\" id=\"signing-form-container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mx-auto\">\r\n        <div class=\"formSign form\" data-aos=\"zoom-in\">\r\n          <div class=\"logo mb-3\">\r\n            <div class=\"col-md-12 text-center\">\r\n              <h1>Registracija</h1>\r\n            </div>\r\n          </div>\r\n          <form id=\"registerNewUser\" (submit)=\"submitRegisterData()\" autocomplete=\"off\">\r\n            <!--Warning-->\r\n            <div class=\"alert alert-warning container\" style=\"margin-top: 2rem\" *ngIf=\"sporocilo\">{{\r\n              sporocilo }}</div>\r\n\r\n            <div class=\"row container-fluid\">\r\n              <div class=\"col\">\r\n                <label for=\"ime\">Ime</label>\r\n                <input [(ngModel)]=\"newUserData.ime\" id=\"ime\" name=\"ime\" type=\"text\" class=\"form-control\">\r\n              </div>\r\n              <div class=\"col\">\r\n                <label for=\"priimek\">Priimek</label>\r\n                <input [(ngModel)]=\"newUserData.priimek\" id=\"priimek\" name=\"priimek\" type=\"text\" class=\"form-control\">\r\n              </div>\r\n            </div>\r\n            <hr>\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Email</label>\r\n              <input [(ngModel)]=\"newUserData.email\" type=\"email\" name=\"email\" class=\"form-control\" id=\"email\"\r\n                aria-describedby=\"emailHelp\" placeholder=\"uporabnik@domena.si\">\r\n            </div>\r\n            <hr>\r\n            <div class=\"form-group\">\r\n              <label for=\"geslo\">Geslo</label>\r\n              <input [(ngModel)]=\"newUserData.geslo\" type=\"password\" name=\"geslo\" id=\"geslo\" class=\"form-control\"\r\n                placeholder=\"Geslo mora biti dolgo vsaj 8 znakov\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"gesloPotrdi\">Potrdi geslo</label>\r\n              <input [(ngModel)]=\"gesloPotrdi\" type=\"password\" name=\"gesloPotrdi\" id=\"gesloPotrdi\" class=\"form-control\">\r\n            </div>\r\n            <hr>\r\n            <label class=\"control control-checkbox\">\r\n              <input [(ngModel)]=\"newUserData.statusInstruktorja\"\r\n                (change)=\"becomeAnInstructor(newUserData.statusInstruktorja?true:false)\" type=\"checkbox\"\r\n                id=\"statusInstruktorja\" name=\"statusInstruktorja\" checked=\"true\" value=\"true\">\r\n              <h5 style=\"font-size: 1rem;\"> Želim postati inštruktor (to lahko storite kasneje)</h5>\r\n              <div class=\"control_indicator\"></div>\r\n            </label>\r\n            <hr>\r\n            <div class=\"col-md-12 text-center \">\r\n              <button type=\"submit\" class=\"btn btn-block mybtn btn-primary\">Registriraj</button>\r\n            </div>\r\n            <div class=\"alert alert-info\" *ngIf=\"loading\">\r\n              Registracija poteka...\r\n            </div>\r\n            <div class=\"col-md-12 \">\r\n              <hr>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <p class=\"text-center\">Že registriran? <a routerLink=\"/prijava\" id=\"signin\">Prijavi se\r\n                  tukaj.</a></p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport { JobsService } from '../../../services/jobs.service';\r\n\r\nimport { Job } from '../../../classes/job';\r\nimport { User } from '../../../classes/user';\r\nimport { AuthenticationService } from 'src/app/common/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-offer-info',\r\n  templateUrl: './offer-info.component.html',\r\n  styleUrls: ['./offer-info.component.css']\r\n})\r\nexport class OfferInfoComponent implements OnInit {\r\n\r\n  constructor(\r\n    private JobsService: JobsService,\r\n    private route: ActivatedRoute,\r\n    private authenticationService: AuthenticationService\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    await this.getJobInfo();\r\n    this.isSignedUp();\r\n  }\r\n\r\n  public sporocilo: string = \"\";\r\n\r\n  public delo: Job;\r\n\r\n  public ponudnik: User;\r\n\r\n  public editState: boolean = false;\r\n\r\n  public isLoggedIn: boolean = this.authenticationService.isLoggedIn();\r\n\r\n  public isAdmin: boolean = false;\r\n\r\n  public signedStatus: boolean = false;\r\n\r\n  private async getJobInfo(): Promise<void> {\r\n    this.route.paramMap\r\n      .pipe(\r\n        switchMap((params: ParamMap) => {\r\n          let jobID = params.get('idDela');\r\n          return this.JobsService.getJobInfo(jobID);\r\n        })\r\n      )\r\n      .subscribe(async (job: Job) => {\r\n        this.delo = job;\r\n        if (this.authenticationService.isLoggedIn()) {\r\n          if (this.delo.emailPonudnika === this.authenticationService.getCurrentUser().email) {\r\n            this.isAdmin = true;\r\n          }\r\n        }\r\n        this.sporocilo = job ? \"\" : \"Delo ne obstaja :(\"\r\n        job ? this.getJobHost() : null;\r\n      })\r\n  }\r\n\r\n  private getJobHost(): void {\r\n    this.JobsService.getJobHost(this.delo.emailPonudnika)\r\n      .then(host => {\r\n        this.ponudnik = host;\r\n        this.sporocilo = host ? \"\" : \"Ne najdem gostitelja dela :(\"\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = \"Napaka API-ja pri iskanju gostitelja dela.\"\r\n        // console.error(error);\r\n      });\r\n  }\r\n\r\n  editJobInfo(): void {\r\n    this.editCSS(true);\r\n    this.editState = true;\r\n  }\r\n\r\n  saveJobInfo(): void {\r\n    this.editCSS(false);\r\n    this.editState = false;\r\n    this.JobsService.editJobInfo(this.delo)\r\n      .then(job => {\r\n        job ? this.delo = job : this.sporocilo = \"Napaka pri posodabljanju dela.\"\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = \"Napaka API-ja pri posodabljanju dela.\"\r\n      });\r\n  }\r\n\r\n  private editCSS(isEdit): void {\r\n    if (isEdit) {\r\n      document.getElementById(\"edit-btn\").classList.remove(\"d-ilblock\");\r\n      document.getElementById(\"edit-btn\").classList.add(\"d-none\");\r\n      document.getElementById(\"save-btn\").classList.remove(\"d-none\");\r\n      document.getElementById(\"save-btn\").classList.add(\"d-ilblock\");\r\n      document.getElementById(\"eur\").style.display = \"none\";\r\n    } else {\r\n      document.getElementById(\"edit-btn\").classList.remove(\"d-none\");\r\n      document.getElementById(\"edit-btn\").classList.add(\"d-ilblock\");\r\n      document.getElementById(\"save-btn\").classList.remove(\"d-ilblock\");\r\n      document.getElementById(\"save-btn\").classList.add(\"d-none\");\r\n      document.getElementById(\"eur\").style.display = \"inline\";\r\n    }\r\n  }\r\n\r\n  deleteJob() {\r\n    let jobID = this.route.snapshot.paramMap.get('idDela');\r\n    this.JobsService.deleteJob(jobID)\r\n      .subscribe(\r\n        () => {\r\n          this.delo = null;\r\n          this.sporocilo = \"Delo uspešno izbrisano.\"\r\n        },\r\n        (error) => this.sporocilo = \"Napaka API-ja pri brisanju dela.\"\r\n      )\r\n  }\r\n\r\n  signUp() {\r\n    if (this.delo.zasedeno == false) {\r\n      let jobID = this.route.snapshot.paramMap.get('idDela');\r\n      this.JobsService.signUp(jobID)\r\n        .then(response => {\r\n          alert(\"Uspešno ste se prijavili na delo!\");\r\n          this.signedStatus = true;\r\n        })\r\n        .catch(error => this.sporocilo = error);\r\n    } else {\r\n      window.scroll(0, 0);\r\n      this.sporocilo = \"Prišlo je do napake, delo je že zasedeno. Prosimo osvežite stran.\"\r\n    }\r\n  }\r\n\r\n  private async isSignedUp(): Promise<void> {\r\n    if (this.isLoggedIn) {\r\n      let currentUserEmail = this.authenticationService.getCurrentUser().email\r\n      await this.authenticationService.getUser(currentUserEmail)\r\n        .then(user => {\r\n          if(user) {\r\n            user.dela.forEach(delo => {\r\n              if (this.delo._id == delo._id) {\r\n                this.signedStatus = true;\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {});\r\n    }\r\n  }\r\n}","<div class=\"return container-fluid\" style=\"margin-top: 1rem;\">\r\n  <a routerLink=\"/ponudba-del\" class=\"btn btn-info\" style=\"margin-right: 10px\">Nazaj na ponudbo del</a>\r\n\r\n  <button *ngIf=\"delo&&isAdmin\" class=\"btn btn-warning d-ilblock\" id=\"edit-btn\" (click)=\"editJobInfo()\" style=\"margin-right: 10px\"><i\r\n      class=\"fas fa-edit\"></i></button>\r\n  <button *ngIf=\"delo&&isAdmin\" id=\"save-btn\" value=\"save\" class=\"btn btn-success d-none\" (click)=\"saveJobInfo()\" style=\"margin-right: 10px\"><i\r\n      class=\"fas fa-check\"></i></button>\r\n  <button *ngIf=\"delo&&isAdmin\" class=\"btn btn-danger d-inline\" id=\"delete-btn\" (click)=\"deleteJob()\"><i\r\n      class=\"fas fa-trash-alt\"></i></button>\r\n\r\n</div>\r\n\r\n<div class=\"alert alert-warning container\" style=\"margin-top: 2rem\" *ngIf=\"sporocilo\">{{sporocilo}}</div>\r\n\r\n<div class=\"card event\" *ngIf=\"delo&&!editState else editMode\">\r\n  <img class=\"card-img-top event-header\" src=\"../../../../../assets/media/thumbnails/red.png\" alt=\"Card image cap\">\r\n  <div class=\"card-body event-body\">\r\n    <h5 class=\"card-title\" id=\"naziv\">{{delo.naziv}}</h5>\r\n    <hr>\r\n    <p class=\"card-text\" id=\"opis\">{{delo.opis}}</p>\r\n    <hr>\r\n    <h6>Plačilo</h6>\r\n    <p>\r\n      <scope id=\"cena\">{{delo.cena}}</scope>\r\n      <scope id=\"eur\">€</scope>\r\n    </p>\r\n    <hr>\r\n    <h6>Datum</h6>\r\n    <p id=\"datum\">{{delo.datum | date:'d. M. yyyy'}}</p>\r\n\r\n    <hr>\r\n    <div *ngIf=\"!isAdmin&&delo.zasedeno==false&&isLoggedIn\">\r\n      <h6>Prijavi se na delo</h6>\r\n      <div *ngIf=\"!signedStatus else prijavljen\"><a (click)=\"signUp()\" class=\"btn btn-success\">Prijava</a></div>\r\n      <ng-template #prijavljen><button type=\"button\" class=\"btn btn-success\" disabled>Na delo ste\r\n          prijavljeni</button></ng-template>\r\n    </div>\r\n\r\n    <div *ngIf=\"delo.zasedeno == true\">\r\n      <div *ngIf=\"signedStatus\"><button type=\"button\" class=\"btn btn-success\" disabled>Na delo ste\r\n          prijavljeni</button></div>\r\n      <div class=\"alert alert-warning container\" style=\"margin-top: 2rem\">Žal je delo že zasedeno :(</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #editMode>\r\n  <div class=\"card event\" *ngIf=\"editState\">\r\n    <img class=\"card-img-top event-header\" src=\"../../../../../assets/media/thumbnails/yellow.png\" alt=\"Card image cap\">\r\n    <div class=\"card-body event-body\">\r\n      <input [(ngModel)]=\"delo.naziv\" id=\"naziv\" class=\"form-control form-control-md\" name=\"naziv\" required=\"required\"\r\n        type=\"text\">\r\n      <hr>\r\n      <input [(ngModel)]=\"delo.opis\" id=\"opis\" class=\"form-control form-control-md\" name=\"opis\" required=\"required\"\r\n        type=\"text\">\r\n      <hr>\r\n      <h6>Cena</h6>\r\n      <div class=\"input-group mb-3\">\r\n        <input [(ngModel)]=\"delo.cena\" class=\"form-control\" aria-label=\"Recipient's username\"\r\n          aria-describedby=\"basic-addon2\" type=\"number\" step=\"0.10\" min=\"0\"\r\n          onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\">\r\n        <div class=\"input-group-append\">\r\n          <span class=\"input-group-text\" id=\"eur\">€</span>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <h6>Datum</h6>\r\n      <input [(ngModel)]=\"delo.datum\" id=\"datum\" class=\"form-control form-control-md\" name=\"datum\" required=\"required\"\r\n        type=\"date\">\r\n      <hr>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"card profile\" *ngIf=\"ponudnik\">\r\n  <div class=\"card-body profile-body\" *ngIf=\"delo\">\r\n    <h5>Ponudnik</h5>\r\n    <a routerLink=\"/profil/ogled\">\r\n      <h3 class=\"profile-body-item\">{{ ponudnik.ime }} {{ ponudnik.priimek }}</h3>\r\n    </a>\r\n    <hr>\r\n    <h5>Opis uporabnika</h5>\r\n    <h4>{{ ponudnik.opis }}</h4>\r\n  </div>\r\n</div>\r\n\r\n<app-komentarji-seznam-dela></app-komentarji-seznam-dela>\r\n\r\n<get-started></get-started>","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'; //podobno kot axios\r\n\r\nimport { User } from '../classes/user';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { BROWSER_CACHE } from '../classes/cache';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfilService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authenticationService: AuthenticationService,\r\n    @Inject(BROWSER_CACHE) private cache: Storage\r\n    ) { }\r\n\r\n  private apiUrl = 'http://localhost:3000/api';\r\n\r\n\r\n  // public editUserInfo(user: User): Promise<User> {\r\n  //   const url: string = `${this.apiUrl}/uporabnik/${user._id}`;\r\n  //   return this.http\r\n  //     .put(url, user)\r\n  //     .toPromise()\r\n  //     .then(response => response as User)\r\n  //     .catch(this.handleError);\r\n  // }\r\n\r\n  public editUserInfo(user: User): Promise<User> {\r\n    const url: string = `${this.apiUrl}/uporabnik/${user.email}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .put(url, user, httpProperties)\r\n      .toPromise()\r\n      .then(response => response as User)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  // public gradeUser(userEmail: string): Promise<any> {\r\n  //   const currentUserEmail = this.authenticationService.getCurrentUser().email;\r\n  //   const url: string = `${this.apiUrl}/uporabnik/ocena/${userEmail}`;\r\n  //   const httpProperties = {\r\n  //     headers: new HttpHeaders({\r\n  //       'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n  //     })\r\n  //   };\r\n  //   return this.http\r\n  //   .post(url, {currentUserEmail}, httpProperties)\r\n  //   .toPromise()\r\n  //   .then(response => response as any)\r\n  //   .catch(this.handleError);\r\n  // }\r\n\r\n  // public editUserPassword(user: User): Promise<User> {\r\n  //   const url: string = `${this.apiUrl}/uporabnik/${user.email}`;\r\n  //   const httpProperties = {\r\n  //     headers: new HttpHeaders({\r\n  //       'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n  //     })\r\n  //   };\r\n  //   return this.http\r\n  //     .put(url, user, httpProperties)\r\n  //     .toPromise()\r\n  //     .then(response => response as User)\r\n  //     .catch(this.handleError);\r\n  // }\r\n\r\n  public deleteUser(userEmail: string): Observable<void> {\r\n    const url: string = `${this.apiUrl}/uporabnik/${userEmail}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .delete<void>(url, httpProperties)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: any): Promise<any> {\r\n    console.error(\"Error in the service\", error);\r\n    return Promise.reject(error.message || error);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'get-started',\r\n  templateUrl: './get-started.component.html',\r\n  styleUrls: ['./get-started.component.css']\r\n})\r\nexport class GetStartedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"relevant-jobs\" class=\"container\">\r\n    <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\r\n        <ol class=\"carousel-indicators\">\r\n            <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\r\n            <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n            <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n        </ol>\r\n        <div class=\"carousel-inner\" id=\"car\">\r\n            <div class=\"carousel-item active\">\r\n                <img class=\"d-block w-100\" src=\"../../../../assets/media/thumbnails/yellow.png\" alt=\"First slide\">\r\n                <div class=\"carousel-caption d-none d-block\">\r\n                    <h2>Še nisi inštruktor?</h2>\r\n                    <a routerLink=\"/instruktorji\"><h4>Postani inštruktor zdaj</h4></a>\r\n                </div>\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n                <img class=\"d-block w-100\" src=\"../../../../assets/media/thumbnails/white.png\" alt=\"Second slide\">\r\n                <div class=\"carousel-caption d-none d-block\">\r\n                    <h2>Si želiš zaslužka?</h2>\r\n                    <a routerLink=\"/ponudba-del\"><h4>Preglej si ponudbo del</h4></a>\r\n                </div>\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n                <img class=\"d-block w-100\" src=\"../../../../assets/media/thumbnails/orange.png\" alt=\"Third slide\">\r\n                <div class=\"carousel-caption d-none d-block\">\r\n                    <h2>Poveži se s kolegi</h2>\r\n                    <a routerLink=\"/instrukcije-dogodki\"><h4>Sodeluj na dogodkih</h4></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n            <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n            <span class=\"sr-only\">Next</span>\r\n        </a>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport { InstructionsService } from '../../../services/instructions.service';\r\n\r\nimport { InstructionsEvent } from '../../../classes/event';\r\nimport { User } from '../../../classes/user';\r\nimport { AuthenticationService } from 'src/app/common/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-event-info',\r\n  templateUrl: './event-info.component.html',\r\n  styleUrls: ['./event-info.component.css']\r\n})\r\nexport class EventInfoComponent implements OnInit {\r\n\r\n  constructor(\r\n    private instructionsService: InstructionsService,\r\n    private route: ActivatedRoute,\r\n    private authenticationService: AuthenticationService\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    await this.getEventInfo();\r\n    this.isSignedUp();\r\n  }\r\n\r\n  public sporocilo: string = \"\";\r\n\r\n  public dogodek: InstructionsEvent;\r\n\r\n  public gostitelj: User;\r\n\r\n  public editState: boolean = false;\r\n\r\n  public isLoggedIn: boolean = this.authenticationService.isLoggedIn();\r\n\r\n  public isAdmin: boolean = false;\r\n\r\n  public signedStatus: boolean = false;\r\n\r\n  private async getEventInfo(): Promise<void> {\r\n    this.route.paramMap\r\n      .pipe(\r\n        switchMap((params: ParamMap) => {\r\n          let eventID = params.get('idDogodka');\r\n          return this.instructionsService.getEventInfo(eventID);\r\n        })\r\n      )\r\n      .subscribe(async (event: InstructionsEvent) => {\r\n        this.dogodek = event;\r\n        if (this.authenticationService.isLoggedIn()) {\r\n          if (this.dogodek.emailInstruktorja === this.authenticationService.getCurrentUser().email) {\r\n            this.isAdmin = true;\r\n          }\r\n        }\r\n        this.sporocilo = event ? \"\" : \"Dogodek ne obstaja :(\"\r\n        event ? this.getEventHost() : null;\r\n\r\n      });\r\n  }\r\n\r\n  private getEventHost(): void {\r\n    this.instructionsService.getEventHost(this.dogodek.emailInstruktorja)\r\n      .then(host => {\r\n        this.gostitelj = host;\r\n        this.sporocilo = host ? \"\" : \"Ne najdem gostitelja dogodka :(\"\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = \"Napaka API-ja pri iskanju gostitelja dogodka.\"\r\n        // console.error(error);\r\n      });\r\n  }\r\n\r\n  editEventInfo(): void {\r\n    this.editCSS(true);\r\n    this.editState = true;\r\n  }\r\n\r\n  saveEventInfo(): void {\r\n    this.editCSS(false);\r\n    this.editState = false;\r\n    this.instructionsService.editEventInfo(this.dogodek)\r\n      .then(event => {\r\n        event ? this.dogodek = event : this.sporocilo = \"Napaka pri posdabljanju dogodka.\"\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = \"Napaka API-ja pri posodabljanju dogodka.\"\r\n        //console.error(error);\r\n      });\r\n  }\r\n\r\n  private editCSS(isEdit): void {\r\n    if (isEdit) {\r\n      document.getElementById(\"edit-btn\").classList.remove(\"d-ilblock\");\r\n      document.getElementById(\"edit-btn\").classList.add(\"d-none\");\r\n      document.getElementById(\"save-btn\").classList.remove(\"d-none\");\r\n      document.getElementById(\"save-btn\").classList.add(\"d-ilblock\");\r\n      document.getElementById(\"eur\").style.display = \"none\";\r\n    } else {\r\n      document.getElementById(\"edit-btn\").classList.remove(\"d-none\");\r\n      document.getElementById(\"edit-btn\").classList.add(\"d-ilblock\");\r\n      document.getElementById(\"save-btn\").classList.remove(\"d-ilblock\");\r\n      document.getElementById(\"save-btn\").classList.add(\"d-none\");\r\n      document.getElementById(\"eur\").style.display = \"inline\";\r\n    }\r\n  }\r\n\r\n  deleteEvent() {\r\n    let eventID = this.route.snapshot.paramMap.get('idDogodka');\r\n    this.instructionsService.deleteEvent(eventID)\r\n      .subscribe(\r\n        () => {\r\n          this.dogodek = null;\r\n          this.sporocilo = \"Dogodek uspešno izbrisan.\"\r\n        },\r\n        (error) => this.sporocilo = \"Napaka API-ja pri brisanju dogodka.\"\r\n        //console.error(error)\r\n      );\r\n  }\r\n\r\n  signUp() {\r\n    if (this.dogodek.steviloProstihMest > 0) {\r\n      let eventID = this.route.snapshot.paramMap.get('idDogodka');\r\n      this.instructionsService.signUp(eventID)\r\n        .then(response => {\r\n          alert(\"Uspešno ste se prijavili na dogodek!\");\r\n          this.signedStatus = true;\r\n        })\r\n        .catch(error => this.sporocilo = error);\r\n    } else {\r\n      window.scroll(0, 0);\r\n      this.sporocilo = \"Prišlo je do napake, dogodek je že zapolnjen. Prosimo osvežite stran.\"\r\n    }\r\n  }\r\n\r\n  private async isSignedUp(): Promise<void> {\r\n    if (this.isLoggedIn) {\r\n      let currentUserEmail = this.authenticationService.getCurrentUser().email\r\n      await this.authenticationService.getUser(currentUserEmail)\r\n        .then(user => {\r\n          if (user) {\r\n            user.dogodki.forEach(dogodek => {\r\n              if (this.dogodek._id == dogodek._id) {\r\n                this.signedStatus = true;\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {});\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"return container-fluid\" style=\"margin-top: 1rem;\">\r\n  <a routerLink=\"/instrukcije-dogodki\" class=\"btn btn-info d-inline\" style=\"margin-right: 10px\">Nazaj na seznam\r\n    dogodkov</a>\r\n\r\n  <button *ngIf=\"dogodek&&isAdmin\" class=\"btn btn-warning d-ilblock\" id=\"edit-btn\" (click)=\"editEventInfo()\"\r\n    style=\"margin-right: 10px\"><i class=\"fas fa-edit\"></i></button>\r\n  <button *ngIf=\"dogodek&&isAdmin\" id=\"save-btn\" value=\"save\" class=\"btn btn-success d-none\" (click)=\"saveEventInfo()\"\r\n    style=\"margin-right: 10px\"><i class=\"fas fa-check\"></i></button>\r\n  <button *ngIf=\"dogodek&&isAdmin\" class=\"btn btn-danger d-inline\" id=\"delete-btn\" (click)=\"deleteEvent()\"\r\n    style=\"margin-right: 10px\"><i class=\"fas fa-trash-alt\"></i></button>\r\n</div>\r\n\r\n<div class=\"alert alert-warning container\" style=\"margin-top: 2rem\" *ngIf=\"sporocilo\">{{sporocilo}}</div>\r\n\r\n<div class=\"card event\" *ngIf=\"dogodek&&!editState else editMode\">\r\n  <img class=\"card-img-top event-header\" src=\"../../../../../assets/media/thumbnails/green.png\" alt=\"Card image cap\">\r\n  <div class=\"card-body event-body\">\r\n    <h5 class=\"card-title\" id=\"naziv\">{{dogodek.naziv}}</h5>\r\n    <hr>\r\n    <p class=\"card-text\" id=\"opis\">{{dogodek.opis}}</p>\r\n    <hr>\r\n    <h6>Datum</h6>\r\n    <p id=\"datum\">{{dogodek.datum | date:'d. M. yyyy'}}</p>\r\n    <hr>\r\n    <h6>Ura</h6>\r\n    <p id=\"ura\">{{dogodek.ura}}</p>\r\n    <hr>\r\n    <h6>Število prostih mest</h6>\r\n    <p id=\"steviloProstihMest\">{{dogodek.steviloProstihMest}}</p>\r\n    <hr>\r\n    <h6>Cena</h6>\r\n    <p>\r\n      <scope id=\"cena\">{{dogodek.cena}}</scope>\r\n      <scope id=\"eur\"> €</scope>\r\n    </p>\r\n\r\n    <hr>\r\n\r\n    <div *ngIf=\"!isAdmin&&dogodek.steviloProstihMest>0&&isLoggedIn\">\r\n      <h6>Prijavi se na dogodek</h6>\r\n      <div *ngIf=\"!signedStatus else prijavljen\"><a (click)=\"signUp()\" class=\"btn btn-success\">Prijava</a></div>\r\n      <ng-template #prijavljen><button type=\"button\" class=\"btn btn-success\" disabled>Na dogodek ste\r\n          prijavljeni</button></ng-template>\r\n    </div>\r\n\r\n    <div *ngIf=\"dogodek.steviloProstihMest <= 0\">\r\n      <div *ngIf=\"signedStatus\"><button type=\"button\" class=\"btn btn-success\" disabled>Na dogodek ste\r\n          prijavljeni</button></div>\r\n      <div class=\"alert alert-warning container\" style=\"margin-top: 2rem\">Žal ni več razpoložljivih mest :(</div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n<ng-template #editMode>\r\n  <div class=\"card event\" *ngIf=\"editState\">\r\n    <img class=\"card-img-top event-header\" src=\"../../../../../assets/media/thumbnails/green.png\" alt=\"Card image cap\">\r\n    <div class=\"card-body event-body\">\r\n      <input [(ngModel)]=\"dogodek.naziv\" id=\"naziv\" class=\"form-control form-control-md\" name=\"naziv\"\r\n        required=\"required\" type=\"text\">\r\n      <hr>\r\n      <input [(ngModel)]=\"dogodek.opis\" id=\"opis\" class=\"form-control form-control-md\" name=\"opis\" required=\"required\"\r\n        type=\"text\">\r\n      <hr>\r\n      <h6>Datum</h6>\r\n      <input [(ngModel)]=\"dogodek.datum\" id=\"datum\" class=\"form-control form-control-md\" name=\"datum\"\r\n        required=\"required\" type=\"date\">\r\n      <hr>\r\n      <h6>Ura</h6>\r\n      <input [(ngModel)]=\"dogodek.ura\" id=\"ura\" class=\"form-control form-control-md\" name=\"ura\" required=\"required\"\r\n        type=\"time\">\r\n      <hr>\r\n      <h6>Število prostih mest</h6>\r\n      <input [(ngModel)]=\"dogodek.steviloProstihMest\" id=\"steviloProstihMest\" class=\"form-control form-control-md\"\r\n        name=\"steviloProstihMest\" required=\"required\" type=\"number\" step=\"1\" min=\"1\" value=\"1\"\r\n        onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\">\r\n      <hr>\r\n      <h6>Cena</h6>\r\n      <div class=\"input-group mb-3\">\r\n        <input [(ngModel)]=\"dogodek.cena\" class=\"form-control\" aria-label=\"Recipient's username\"\r\n          aria-describedby=\"basic-addon2\" type=\"number\" step=\"0.10\" min=\"0\"\r\n          onkeypress=\"return event.charCode >= 48 && event.charCode <= 57\">\r\n        <div class=\"input-group-append\">\r\n          <span class=\"input-group-text\" id=\"eur\">€</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"card profile\" *ngIf=\"gostitelj\">\r\n  <div class=\"card-body profile-body\">\r\n    <h5>Inštruktor</h5>\r\n    <a routerLink=\"/profil/ogled\">\r\n      <h3 class=\"profile-body-item\">{{ gostitelj.ime }} {{ gostitelj.priimek }}</h3>\r\n    </a>\r\n    <hr>\r\n    <h5>Opis uporabnika</h5>\r\n    <h4>{{ gostitelj.opis }}</h4>\r\n  </div>\r\n</div>\r\n\r\n<app-komentarji-seznam></app-komentarji-seznam>\r\n\r\n<get-started></get-started>","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { User } from '../classes/user';\r\nimport { InstructionsEvent } from '../classes/event';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { BROWSER_CACHE } from '../classes/cache';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InstructionsService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authenticationService: AuthenticationService,\r\n    @Inject(BROWSER_CACHE) private cache: Storage  \r\n  ) { }\r\n\r\n  private apiUrl: string = environment.apiUrl;\r\n\r\n  public getInstructors(): Promise<User[]> {\r\n    const url: string = `${this.apiUrl}/uporabniki`;\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => {\r\n        response = this.filterInstructors(response);\r\n        return response as User[];\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private filterInstructors(users): User[] {\r\n    for(let i=users.length-1; i>=0; i--) {\r\n      if(!users[i].statusInstruktorja) {\r\n        users.splice(i, 1);\r\n      }\r\n    }\r\n    \r\n    return users;\r\n  }\r\n\r\n  public getEvents(): Promise<InstructionsEvent[]> {\r\n    const url: string = `${this.apiUrl}/instrukcije-dogodki`;\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => response as InstructionsEvent[])\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public getEventInfo(eventID: string): Promise<InstructionsEvent> {\r\n    const url: string = `${this.apiUrl}/instrukcije-dogodki/dogodek/${eventID}`;\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => response as InstructionsEvent)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public postNewEvent(event: InstructionsEvent): Promise<any> {\r\n    const url: string = `${this.apiUrl}/instrukcije-dogodki`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .post(url, event, httpProperties)\r\n      .toPromise()\r\n      .then(response => response as any)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public editEventInfo(event: InstructionsEvent): Promise<InstructionsEvent> {\r\n    const url: string = `${this.apiUrl}/instrukcije-dogodki/dogodek/${event._id}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .put(url, event, httpProperties)\r\n      .toPromise()\r\n      .then(response => response as InstructionsEvent)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public deleteEvent(eventID: string): Observable<void> {\r\n    const url: string = `${this.apiUrl}/instrukcije-dogodki/dogodek/${eventID}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .delete<void>(url, httpProperties)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  public signUp(eventID: string): Promise<any> {\r\n    const currentUserEmail = this.authenticationService.getCurrentUser().email;\r\n    const url: string = `${this.apiUrl}/instrukcije-dogodki/dogodek/${eventID}/prijava`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n    .post(url, {currentUserEmail}, httpProperties)\r\n    .toPromise()\r\n    .then(response => response as any)\r\n    .catch(this.handleError);\r\n  }\r\n\r\n  public getEventHost(userEmail: string): Promise<User> {\r\n    const url: string = `${this.apiUrl}/uporabnik/${userEmail}`;\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => response as User)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  /* P O P R A V I ! ! ! */\r\n  private handleError(error: any): Promise<any> {\r\n    //console.error('Error in the service.', error.error[\"sporočilo\"] || error.error.errmsg || error);\r\n    return Promise.reject(error.error[\"sporočilo\"] || error.error.errmsg || error);\r\n    // console.error(\"Error in the service\");\r\n    // return;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport { InstructionsService } from '../../../services/instructions.service';\r\n\r\nimport { InstructionsEvent } from '../../../classes/event';\r\nimport { User } from '../../../classes/user';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/common/services/authentication.service';\r\nimport { CommentsService } from 'src/app/common/services/comments.service';\r\nimport { Komentar } from '../../../classes/comment'\r\n\r\n\r\n@Component({\r\n  selector: 'app-komentarji-seznam',\r\n  templateUrl: './komentarji-seznam.component.html',\r\n  styleUrls: ['./komentarji-seznam.component.css']\r\n})\r\nexport class KomentarjiSeznamComponent implements OnInit {\r\n\r\n  public newComment = {\r\n    _id: '',\r\n    avtor: '',\r\n    ocena: null,\r\n    datum: null,\r\n    besediloKomentarja: ''\r\n  };\r\n\r\n  constructor(\r\n    private commentsService: CommentsService,\r\n    private instructionsService: InstructionsService,\r\n    private route: ActivatedRoute,\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEventInfo();\r\n  }\r\n\r\n  public obrazecPrikazan: boolean = false;\r\n\r\n  public sporocilo: string = \"\";\r\n\r\n  public dogodek;\r\n\r\n  public komentar: Komentar;\r\n\r\n  public gostitelj: User;\r\n\r\n  public currentUserEmail: string = \"\";\r\n\r\n  public editState = false;\r\n\r\n  public editID = \"\";\r\n\r\n  public editInfo = {\r\n    besediloKomentarja: \"\",\r\n    ocena: 5\r\n  }\r\n\r\n  public mojiKomentarji = [];\r\n\r\n  postNewComment(): void {\r\n    this.newComment.avtor = this.authenticationService.getCurrentUser().email;\r\n\r\n    if (!this.newComment.avtor ||\r\n      !this.newComment.ocena ||\r\n      !this.newComment.besediloKomentarja) {\r\n      this.sporocilo = \"Prosimo izpolnite vsa polja!\"\r\n    } else {\r\n      // console.log(\"Pošiljam podatke v service...\");\r\n      this.commentsService.postNewComment(this.dogodek, this.newComment)\r\n        .then(comment => {\r\n          // console.log(\"Uspešno prejeti podatki iz servica!\");\r\n          this.newComment = comment;\r\n          this.sporocilo = comment ? \"Komentar uspešno objavljen :)\" : \"Napaka pri objavi komentarja :(\"\r\n          location.reload();\r\n          //this.router.navigateByUrl('/instrukcije-dogodki/dogodek/${event._id}');\r\n          alert(\"Komentar uspešno objavljen!\");\r\n        })\r\n        .catch(error => {\r\n          this.sporocilo = \"Napaka API-ja pri objavi dogodka.\"\r\n          // console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  editComment(comment: Komentar): void {\r\n    this.editCSS(true, comment._id);\r\n    this.editID = comment._id;\r\n    // console.log(this.editID);\r\n  }\r\n\r\n  deleteComment(commentID: string) {\r\n    let eventID = this.route.snapshot.paramMap.get('idDogodka');\r\n    // console.log(commentID);\r\n    this.commentsService.deleteComment(eventID, commentID)\r\n      .subscribe(\r\n        () => {\r\n          this.komentar = null;\r\n          this.sporocilo = \"Komentar uspešno izbrisan.\"\r\n          location.reload();\r\n          alert(\"Komentar uspešno zbrisan!\");\r\n        },\r\n        (error) => this.sporocilo = \"Napaka API-ja pri brisanju komentarja.\"\r\n        // console.error(error)\r\n      );\r\n  }\r\n\r\n  saveComment(comment: Komentar): void {\r\n    if (!this.editInfo.besediloKomentarja || !this.editInfo.ocena) {\r\n      alert(\"Prosim izpolnite vsa polja, preden shranite komentar!\");\r\n    } else {\r\n      this.editCSS(false, comment._id);\r\n      this.editID = \"\";\r\n      this.editState = false;\r\n      comment.besediloKomentarja = this.editInfo.besediloKomentarja;\r\n      comment.ocena = this.editInfo.ocena;\r\n      this.commentsService.editComment(comment, this.dogodek)\r\n        .then(comment => {\r\n          comment ? alert(\"Uspešno posodobljen komentar!\") : alert(\"Napaka pri posdabljanju komentarja.\")\r\n        })\r\n        .catch(error => {\r\n          alert(\"Napaka API-ja pri posodabljanju komentarja. Poskusite znova kasneje.\");\r\n          // console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  private editCSS(isEdit: boolean, comment: string): void {\r\n    if (isEdit) {\r\n      document.getElementById(\"edit-btn-\" + comment).classList.remove(\"d-ilblock\");\r\n      document.getElementById(\"edit-btn-\" + comment).classList.add(\"d-none\");\r\n      document.getElementById(\"save-btn-\" + comment).classList.remove(\"d-none\");\r\n      document.getElementById(\"save-btn-\" + comment).classList.add(\"d-ilblock\");\r\n    } else {\r\n      document.getElementById(\"edit-btn-\" + comment).classList.remove(\"d-none\");\r\n      document.getElementById(\"edit-btn-\" + comment).classList.add(\"d-ilblock\");\r\n      document.getElementById(\"save-btn-\" + comment).classList.remove(\"d-ilblock\");\r\n      document.getElementById(\"save-btn-\" + comment).classList.add(\"d-none\");\r\n    }\r\n  }\r\n\r\n  private async getEventInfo(): Promise<void> {\r\n    this.route.paramMap\r\n      .pipe(\r\n        switchMap((params: ParamMap) => {\r\n          let eventID = params.get('idDogodka');\r\n          return this.instructionsService.getEventInfo(eventID);\r\n        })\r\n      )\r\n      .subscribe(async (event: InstructionsEvent) => {\r\n        this.dogodek = event;\r\n        // console.log(this.dogodek);\r\n        if (this.authenticationService.isLoggedIn()) {\r\n          this.currentUserEmail = this.authenticationService.getCurrentUser().email;\r\n        }\r\n        this.sporocilo = event ? \"\" : \"Dogodek ne obstaja :(\"\r\n        event ? this.getEventHost() : null;\r\n\r\n      });\r\n  }\r\n\r\n  private getEventHost(): void {\r\n    this.instructionsService.getEventHost(this.dogodek.emailInstruktorja)\r\n      .then(host => {\r\n        this.gostitelj = host;\r\n        this.sporocilo = host ? \"\" : \"Ne najdem gostitelja dogodka :(\"\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = \"Napaka API-ja pri iskanju gostitelja dogodka.\"\r\n        // console.error(error);\r\n      });\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"komentarji-seznam m-3\">\r\n  <button (click)=\"obrazecPrikazan=true\" class=\"btn btn-primary btn-sm float-right\">Dodaj komentar</button>\r\n  <h4>Komentarji Uporabnikov</h4>\r\n  <hr>\r\n  <div class=\"komentarji-nov m-3\">\r\n    <div *ngIf=\"obrazecPrikazan\">\r\n      <form (ngSubmit)=\"postNewComment()\">\r\n        <!-- <div class=\"form-group row\">\r\n              <label class=\"col-10 col-sm-2 col-form-label col-form-label-sm\" for=\"naziv\">Naziv</label>\r\n              <div class=\"col-12 col-sm-10\">\r\n                <input [(ngModel)]=\"newComment.avtor\" id=\"avtor\" class=\"form-control form-control-sm\" name=\"avtor\" required=\"required\">\r\n              </div>\r\n            </div> -->\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-10 col-sm-2 col-form-label col-form-label-sm\" for=\"ocena\">Ocena</label>\r\n          <div class=\"col-12 col-sm-2\">\r\n            <select [(ngModel)]=\"newComment.ocena\" id=\"ocena\" name=\"ocena\" class=\"form-control form-control-sm\">\r\n              <option [ngValue]=\"5\">5</option>\r\n              <option [ngValue]=\"4\">4</option>\r\n              <option [ngValue]=\"3\">3</option>\r\n              <option [ngValue]=\"2\">2</option>\r\n              <option [ngValue]=\"1\">1</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label col-form-label-sm\" for=\"komentar\">Komentar</label>\r\n          <div class=\"col-sm-10\">\r\n            <textarea [(ngModel)]=\"newComment.besediloKomentarja\" id=\"besediloKomentarja\"\r\n              class=\"form-control form-control-sm\" name=\"besediloKomentarja\" rows=\"5\"></textarea>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-12\">\r\n            <button (click)=\"obrazecPrikazan=false\" class=\"btn btn-primary btn-sm float-right ml-3\">Prekliči</button>\r\n            <button class=\"btn btn-primary btn-sm float-right\">Dodaj moj komentar</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"dogodek\">\r\n    <div class=\"row komentar\" *ngFor=\"let komentar of dogodek.komentarji\">\r\n      <div class=\"col-12 rounded\">\r\n        <small class=\"komentar-datum float-right\">{{komentar.datum | date:'short'}}</small>\r\n        <button *ngIf=\"dogodek&&komentar.avtor===currentUserEmail\" class=\"btn btn-warning btn-sm float-right d-ilblock\" id=\"edit-btn-{{komentar._id}}\"\r\n          (click)=\"editComment(komentar)\" style=\"margin-right: 10px\"><i class=\"fas fa-edit\"></i></button>\r\n        <button *ngIf=\"dogodek&&komentar.avtor===currentUserEmail\" id=\"save-btn-{{komentar._id}}\" value=\"save\" class=\"btn btn-success btn-sm float-right d-none\"\r\n          (click)=\"saveComment(komentar)\" style=\"margin-right: 10px\"><i class=\"fas fa-check\"></i></button>\r\n        <button *ngIf=\"dogodek&&komentar.avtor===currentUserEmail\" class=\"btn btn-danger btn-sm float-right d-inline\" id=\"delete-btn\" (click)=\"deleteComment(komentar._id)\"\r\n          style=\"margin-right: 10px\"><i class=\"fas fa-trash-alt\"></i></button>\r\n        <h5 class=\"komentar-avtor\"><a routerLink=\"/profil/{{komentar.avtor}}\">{{komentar.avtor}}</a></h5>\r\n        <div *ngIf=\"!editState&&editID!==komentar._id else edit\">\r\n          <div class=\"komentar-ocena\" id=\"ocena-{{komentar._id}}\">{{komentar.ocena}}/5</div>\r\n          <div class=\"komentar-besedilo\" id=\"besedilo-{{komentar._id}}\">{{komentar.besediloKomentarja}}</div>\r\n        </div>\r\n        <ng-template #edit>\r\n          <div *ngIf=\"komentar._id===editID else notEdit\">\r\n            <select [(ngModel)]=\"editInfo.ocena\" id=\"ocena\" name=\"ocena\" class=\"form-control form-control-sm\">\r\n              <option [ngValue]=\"5\">5</option>\r\n              <option [ngValue]=\"4\">4</option>\r\n              <option [ngValue]=\"3\">3</option>\r\n              <option [ngValue]=\"2\">2</option>\r\n              <option [ngValue]=\"1\">1</option>\r\n            </select>\r\n            <textarea [(ngModel)]=\"editInfo.besediloKomentarja\" id=\"besedilo-{{komentar._id}}\"\r\n            class=\"form-control form-control-sm\" name=\"besediloKomentarja\" rows=\"5\" placeholder=\"{{komentar.besediloKomentarja}}\"></textarea>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template #notEdit>\r\n          <div class=\"komentar-ocena\" id=\"ocena-{{komentar._id}}\">{{komentar.ocena}}/5</div>\r\n          <div class=\"komentar-besedilo\" id=\"besedilo-{{komentar._id}}\">{{komentar.besediloKomentarja}}</div>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { BROWSER_CACHE } from '../classes/cache';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { Komentar } from '../../common/classes/comment';\r\nimport { Job } from '../classes/job';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentsJobsService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authenticationService: AuthenticationService,\r\n    @Inject(BROWSER_CACHE) private cache: Storage\r\n  ) { }\r\n\r\n  private apiUrl: string = environment.apiUrl;\r\n\r\n  /* Nov komentar */\r\n  public postNewComment(job: Job, comment: Komentar): Promise<any> {\r\n    // console.log(\"Podatki so prišli v service, in sicer so naslednji:\");\r\n    // console.log(job);\r\n    // console.log(comment);\r\n    const url: string = `${this.apiUrl}/ponudba-del/delo/${job._id}/komentarji`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .post(url, comment, httpProperties)\r\n      .toPromise()\r\n      .then(response => response as any)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public editComment(comment: Komentar, job: Job): Promise<Komentar> {\r\n    const url: string = `${this.apiUrl}/ponudba-del/delo/${job._id}/komentarji/${comment._id}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .put(url, comment, httpProperties)\r\n      .toPromise()\r\n      .then(response => response as any)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public deleteComment(jobID: string, commentID: string): Observable<void> {\r\n    const url: string = `${this.apiUrl}/ponudba-del/delo/${jobID}/komentarji/${commentID}`;\r\n    const httpProperties = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${this.cache.getItem('stbree-token')}`\r\n      })\r\n    };\r\n    return this.http\r\n      .delete<void>(url, httpProperties)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  /* P O P R A V I ! ! ! */\r\n  private handleError(error: any): Promise<any> {\r\n    //console.error('Error in the service.', error.error[\"sporočilo\"] || error.error.errmsg || error);\r\n    return Promise.reject(error.error[\"sporočilo\"] || error.error.errmsg || error);\r\n    // console.error(\"Error in the service\");\r\n    // return;\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BROWSER_CACHE } from '../classes/cache';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { User } from '../classes/user';\r\nimport { AuthenticationResult } from '../classes/authentication-result';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(\r\n    @Inject(BROWSER_CACHE) private storage: Storage,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  private apiUrl: string = environment.apiUrl;\r\n\r\n  public async login(user: User): Promise<any> {\r\n    return this\r\n      .authenticateLogin(user)\r\n      .then((AuthenticationResult: AuthenticationResult) => {\r\n        this.setToken(AuthenticationResult[\"token\"]);\r\n      });\r\n  }\r\n\r\n  public async register(user: User): Promise<any> {\r\n    let existingEmail;\r\n    this.getUser(user.email)\r\n    .then((user) => existingEmail = user.email)\r\n    .catch((err) => existingEmail = null);\r\n\r\n    if(existingEmail != null) {\r\n      return null\r\n    } else {\r\n      return this\r\n      .authenticateRegister(user)\r\n      .then((AuthenticationResult: AuthenticationResult) => {\r\n        this.setToken(AuthenticationResult[\"token\"]);\r\n      });\r\n    }\r\n  }\r\n\r\n  public logout(): void {\r\n    this.storage.removeItem('stbree-token');\r\n  }\r\n\r\n  private authenticateLogin(user: User): Promise<AuthenticationResult> {\r\n    return this.authentication('prijava', user);\r\n  }\r\n\r\n  private authenticateRegister(user: User): Promise<AuthenticationResult> {\r\n    return this.authentication('registracija', user);\r\n  }\r\n\r\n  private authentication(subUrl: string, user: User): Promise<AuthenticationResult> {\r\n    const url: string = `${this.apiUrl}/${subUrl}`;\r\n    return this.http\r\n      .post(url, user)\r\n      .toPromise()\r\n      .then(rezultat => rezultat as AuthenticationResult)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return this.storage.getItem('stbree-token');\r\n  }\r\n\r\n  public setToken(token: string): void {\r\n    this.storage.setItem('stbree-token', token);\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const token: string = this.getToken();\r\n    if (token) {\r\n      const usefulContents = JSON.parse(this.b64Utf8(token.split('.')[1]));\r\n      return usefulContents.exp > (Date.now() / 1000);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //dodaj isAdmin\r\n\r\n  public getCurrentUser(): User {\r\n    if (this.isLoggedIn()) {\r\n      const token: string = this.getToken();\r\n      const { email, ime, priimek, statusInstruktorja } = JSON.parse(this.b64Utf8(token.split('.')[1]));\r\n      //console.log(JSON.parse(this.b64Utf8(token.split('.')[1])))\r\n      return { email, ime, priimek, statusInstruktorja } as User;\r\n    }\r\n  }\r\n\r\n  private b64Utf8(string: string): string {\r\n    return decodeURIComponent(\r\n      Array.prototype.map\r\n        .call(\r\n          atob(string),\r\n          (character: string) => {\r\n            return '%' + ('00' + character.charCodeAt(0).toString(16)).slice(-2);\r\n          }\r\n        )\r\n        .join('')\r\n    );\r\n  };\r\n\r\n  public getUser(email: string): Promise<User> {\r\n    const url: string = `${this.apiUrl}/uporabnik/${email}`;\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => {\r\n        let { email, ime, priimek, opis, statusInstruktorja, telefonskaStevilka, dogodki, dela }: any = response;\r\n        return { email, ime, priimek, opis, statusInstruktorja, telefonskaStevilka, dogodki, dela } as User;\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public dropDB():Promise<any> {\r\n    // console.log(\"Reached the service...\");\r\n    const url: string = `${this.apiUrl}/db/dropDB`;\r\n    // console.log(url);\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => response as any)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public dropUsers():Promise<any> {\r\n    // console.log(\"Reached the service...\");\r\n    const url: string = `${this.apiUrl}/db/dropUsers`;\r\n    // console.log(url);\r\n    return this.http\r\n      .get(url)\r\n      .toPromise()\r\n      .then(response => response as any)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  /* P O P R A V I ! ! ! */\r\n  private handleError(error: any): Promise<any> {\r\n    //console.error('Error in the service.', error.error[\"sporočilo\"] || error.error.errmsg || error);\r\n    return Promise.reject(error.error[\"sporočilo\"] || error.error.errmsg || error);\r\n    // console.error(\"Error in the service\");\r\n    // return;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { JobsService } from '../../../services/jobs.service';\r\nimport { AuthenticationService } from 'src/app/common/services/authentication.service';\r\nimport { CommentsJobsService } from 'src/app/common/services/comments-jobs.service';\r\n\r\nimport { Komentar } from '../../../classes/comment'\r\nimport { Job } from '../../../classes/job';\r\nimport { User } from '../../../classes/user';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-komentarji-seznam-dela',\r\n  templateUrl: './komentarji-seznam-dela.component.html',\r\n  styleUrls: ['./komentarji-seznam-dela.component.css']\r\n})\r\nexport class KomentarjiSeznamDelaComponent implements OnInit {\r\n\r\n  public newComment = {\r\n    _id: '',\r\n    avtor: '',\r\n    ocena: null,\r\n    datum: null,\r\n    besediloKomentarja: ''\r\n  };\r\n\r\n  constructor(\r\n    private commentsJobsService: CommentsJobsService,\r\n    private JobsService: JobsService,\r\n    private authenticationService: AuthenticationService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getJobInfo();\r\n  }\r\n\r\n  public delo: Job;\r\n\r\n  public isAdmin: boolean = false;\r\n\r\n  public sporocilo: string = \"\";\r\n\r\n  public ponudnik: User;\r\n\r\n  public komentar: Komentar;\r\n\r\n  public obrazecPrikazan: boolean = false;\r\n\r\n  public currentUserEmail: string = \"\";\r\n\r\n  public editState = false;\r\n\r\n  public editID = \"\";\r\n\r\n  public editInfo = {\r\n    besediloKomentarja: \"\",\r\n    ocena: 5\r\n  }\r\n\r\n  postNewComment(): void {\r\n    this.newComment.avtor = this.authenticationService.getCurrentUser().email;\r\n\r\n    if (!this.newComment.avtor ||\r\n      !this.newComment.ocena ||\r\n      !this.newComment.besediloKomentarja) {\r\n      this.sporocilo = \"Prosimo izpolnite vsa polja!\"\r\n    } else {\r\n      // console.log(\"Pošiljam podatke v service...\");\r\n      this.commentsJobsService.postNewComment(this.delo, this.newComment)\r\n        .then(comment => {\r\n          // console.log(\"Uspešno prejeti podatki iz servica!\");\r\n          this.newComment = comment;\r\n          this.sporocilo = comment ? \"Komentar uspešno objavljen :)\" : \"Napaka pri objavi komentarja :(\"\r\n          location.reload();\r\n          //this.router.navigateByUrl('/instrukcije-dogodki/dogodek/${event._id}');\r\n          alert(\"Komentar uspešno objavljen!\");\r\n        })\r\n        .catch(error => {\r\n          this.sporocilo = \"Napaka API-ja pri objavi dogodka.\"\r\n          //console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  editComment(comment: Komentar): void {\r\n    this.editCSS(true, comment._id);\r\n    this.editID = comment._id;\r\n    // console.log(this.editID);\r\n  }\r\n\r\n  deleteComment(commentID: string) {\r\n    let jobID = this.route.snapshot.paramMap.get('idDela');\r\n    // console.log(commentID);\r\n    this.commentsJobsService.deleteComment(jobID, commentID)\r\n      .subscribe(\r\n        () => {\r\n          this.komentar = null;\r\n          this.sporocilo = \"Komentar uspešno izbrisan.\"\r\n          location.reload();\r\n          alert(\"Komentar uspešno zbrisan!\");\r\n        },\r\n        (error) => this.sporocilo = \"Napaka API-ja pri brisanju komentarja.\"\r\n        //console.error(error)\r\n      );\r\n  }\r\n\r\n  saveComment(comment: Komentar): void {\r\n    if (!this.editInfo.besediloKomentarja || !this.editInfo.ocena) {\r\n      alert(\"Prosim izpolnite vsa polja, preden shranite komentar!\");\r\n    } else {\r\n      this.editCSS(false, comment._id);\r\n      this.editID = \"\";\r\n      this.editState = false;\r\n      comment.besediloKomentarja = this.editInfo.besediloKomentarja;\r\n      comment.ocena = this.editInfo.ocena;\r\n      this.commentsJobsService.editComment(comment, this.delo)\r\n        .then(comment => {\r\n          comment ? alert(\"Uspešno posodobljen komentar!\") : alert(\"Napaka pri posdabljanju komentarja.\")\r\n        })\r\n        .catch(error => {\r\n          alert(\"Napaka API-ja pri posodabljanju komentarja. Poskusite znova kasneje.\");\r\n          //console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  private editCSS(isEdit: boolean, comment: string): void {\r\n    if (isEdit) {\r\n      document.getElementById(\"edit-btn-\" + comment).classList.remove(\"d-ilblock\");\r\n      document.getElementById(\"edit-btn-\" + comment).classList.add(\"d-none\");\r\n      document.getElementById(\"save-btn-\" + comment).classList.remove(\"d-none\");\r\n      document.getElementById(\"save-btn-\" + comment).classList.add(\"d-ilblock\");\r\n    } else {\r\n      document.getElementById(\"edit-btn-\" + comment).classList.remove(\"d-none\");\r\n      document.getElementById(\"edit-btn-\" + comment).classList.add(\"d-ilblock\");\r\n      document.getElementById(\"save-btn-\" + comment).classList.remove(\"d-ilblock\");\r\n      document.getElementById(\"save-btn-\" + comment).classList.add(\"d-none\");\r\n    }\r\n  }\r\n\r\n  private async getJobInfo(): Promise<void> {\r\n    this.route.paramMap\r\n      .pipe(\r\n        switchMap((params: ParamMap) => {\r\n          let jobID = params.get('idDela');\r\n          return this.JobsService.getJobInfo(jobID);\r\n        })\r\n      )\r\n      .subscribe(async (job: Job) => {\r\n        this.delo = job;\r\n        if (this.authenticationService.isLoggedIn()) {\r\n          this.currentUserEmail = this.authenticationService.getCurrentUser().email;\r\n        }\r\n        this.sporocilo = job ? \"\" : \"Delo ne obstaja :(\"\r\n        job ? this.getJobHost() : null;\r\n\r\n      });\r\n  }\r\n\r\n  private getJobHost(): void {\r\n    this.JobsService.getJobHost(this.delo.emailPonudnika)\r\n      .then(host => {\r\n        this.ponudnik = host;\r\n        this.sporocilo = host ? \"\" : \"Ne najdem gostitelja dela :(\"\r\n      })\r\n      .catch(error => {\r\n        this.sporocilo = \"Napaka API-ja pri iskanju gostitelja dela.\"\r\n        // console.error(error);\r\n      });\r\n  }\r\n}\r\n","<div class=\"komentarji-seznam m-3\">\r\n    <button (click)=\"obrazecPrikazan=true\" class=\"btn btn-primary btn-sm float-right\">Dodaj komentar</button>\r\n    <h4>Komentarji Uporabnikov</h4>\r\n    <hr>\r\n    <div class=\"komentarji-nov m-3\">\r\n      <div *ngIf=\"obrazecPrikazan\">\r\n        <form (ngSubmit)=\"postNewComment()\">\r\n          <!-- <div class=\"form-group row\">\r\n                <label class=\"col-10 col-sm-2 col-form-label col-form-label-sm\" for=\"naziv\">Naziv</label>\r\n                <div class=\"col-12 col-sm-10\">\r\n                  <input [(ngModel)]=\"newComment.avtor\" id=\"avtor\" class=\"form-control form-control-sm\" name=\"avtor\" required=\"required\">\r\n                </div>\r\n              </div> -->\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-10 col-sm-2 col-form-label col-form-label-sm\" for=\"ocena\">Ocena</label>\r\n            <div class=\"col-12 col-sm-2\">\r\n              <select [(ngModel)]=\"newComment.ocena\" id=\"ocena\" name=\"ocena\" class=\"form-control form-control-sm\">\r\n                <option [ngValue]=\"5\">5</option>\r\n                <option [ngValue]=\"4\">4</option>\r\n                <option [ngValue]=\"3\">3</option>\r\n                <option [ngValue]=\"2\">2</option>\r\n                <option [ngValue]=\"1\">1</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-2 col-form-label col-form-label-sm\" for=\"komentar\">Komentar</label>\r\n            <div class=\"col-sm-10\">\r\n              <textarea [(ngModel)]=\"newComment.besediloKomentarja\" id=\"besediloKomentarja\"\r\n                class=\"form-control form-control-sm\" name=\"besediloKomentarja\" rows=\"5\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-12\">\r\n              <button (click)=\"obrazecPrikazan=false\" class=\"btn btn-primary btn-sm float-right ml-3\">Prekliči</button>\r\n              <button class=\"btn btn-primary btn-sm float-right\">Dodaj moj komentar</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"delo\">\r\n      <div class=\"row komentar\" *ngFor=\"let komentar of delo.komentarji\">\r\n        <div class=\"col-12 rounded\">\r\n          <small class=\"komentar-datum float-right\">{{komentar.datum | date:'short'}}</small>\r\n          <button *ngIf=\"delo&&komentar.avtor===currentUserEmail\" class=\"btn btn-warning btn-sm d-ilblock float-right\" id=\"edit-btn-{{komentar._id}}\"\r\n            (click)=\"editComment(komentar)\" style=\"margin-right: 10px\"><small><i class=\"fas fa-edit\"></i></small></button>\r\n          <button *ngIf=\"delo&&komentar.avtor===currentUserEmail\" id=\"save-btn-{{komentar._id}}\" value=\"save\" class=\"btn btn-success btn-sm d-none float-right\"\r\n            (click)=\"saveComment(komentar)\" style=\"margin-right: 10px\"><small><i class=\"fas fa-check\"></i></small></button>\r\n          <button *ngIf=\"delo&&komentar.avtor===currentUserEmail\" class=\"btn btn-danger btn-sm d-inline float-right\" id=\"delete-btn\" (click)=\"deleteComment(komentar._id)\"\r\n            style=\"margin-right: 10px\"><small><i class=\"fas fa-trash-alt\"></i></small></button>\r\n          <h5 class=\"komentar-avtor\"><a routerLink=\"/profil/{{komentar.avtor}}\">{{komentar.avtor}}</a></h5>\r\n          <div *ngIf=\"!editState&&editID!==komentar._id else edit\">\r\n            <div class=\"komentar-ocena\" id=\"ocena-{{komentar._id}}\">{{komentar.ocena}}/5</div>\r\n            <div class=\"komentar-besedilo\" id=\"besedilo-{{komentar._id}}\">{{komentar.besediloKomentarja}}</div>\r\n          </div>\r\n          <ng-template #edit>\r\n            <div *ngIf=\"komentar._id===editID else notEdit\">\r\n              <select [(ngModel)]=\"editInfo.ocena\" id=\"ocena\" name=\"ocena\" class=\"form-control form-control-sm\">\r\n                <option [ngValue]=\"5\">5</option>\r\n                <option [ngValue]=\"4\">4</option>\r\n                <option [ngValue]=\"3\">3</option>\r\n                <option [ngValue]=\"2\">2</option>\r\n                <option [ngValue]=\"1\">1</option>\r\n              </select>\r\n              <textarea [(ngModel)]=\"editInfo.besediloKomentarja\" id=\"besedilo-{{komentar._id}}\"\r\n              class=\"form-control form-control-sm\" name=\"besediloKomentarja\" rows=\"5\" placeholder=\"{{komentar.besediloKomentarja}}\"></textarea>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template #notEdit>\r\n            <div class=\"komentar-ocena\" id=\"ocena-{{komentar._id}}\">{{komentar.ocena}}/5</div>\r\n            <div class=\"komentar-besedilo\" id=\"besedilo-{{komentar._id}}\">{{komentar.besediloKomentarja}}</div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n  </div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit, HostListener, Inject } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport { User } from '../../classes/user';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        const eventUrl = /(?<=\\/).+/.exec(event.urlAfterRedirects);\r\n        const currentRoute = (eventUrl || []).join('');\r\n        this.currentRoute = currentRoute;\r\n        if(!this.isLoggedIn()) {\r\n          try {\r\n            this.fixNavbar(currentRoute);\r\n          } catch {\r\n            \r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  private currentRoute: string = \"\";\r\n\r\n  public getCurrentUserEmail(): string {\r\n    return this.authenticationService.getCurrentUser().email;\r\n  }\r\n\r\n  public logout(): void {\r\n    this.authenticationService.logout();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n\r\n  public getUser(): string {\r\n    const uporabnik: User = this.authenticationService.getCurrentUser();\r\n    return uporabnik ? uporabnik.ime + \" \" + uporabnik.priimek : 'Gost';\r\n  }\r\n\r\n  public getProfileUrl(): string {\r\n    const uporabnik: User = this.authenticationService.getCurrentUser();\r\n    return uporabnik ? uporabnik.email : 'gost';\r\n  }\r\n\r\n  @HostListener('window:scroll', [])\r\n  onWindowScroll() {\r\n    \r\n    if (!this.authenticationService.isLoggedIn() && !this.checkRoute(this.currentRoute)) {\r\n      if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\r\n        document.getElementById('fixing-navbar').classList.add('scrolled');\r\n      } else {\r\n        document.getElementById('fixing-navbar').classList.remove('scrolled');\r\n      }\r\n    }\r\n  }\r\n\r\n  private fixNavbar(currentRoute) {\r\n    if(this.checkRoute(currentRoute)) {\r\n      document.getElementById('fixing-navbar').classList.remove('fixed-top');\r\n      document.getElementById('fixing-navbar').classList.add('scrolled');\r\n    } else {\r\n      document.getElementById('fixing-navbar').classList.add('fixed-top');\r\n      document.getElementById('fixing-navbar').classList.remove('scrolled');\r\n    }\r\n  }\r\n\r\n  private checkRoute(currentRoute) {\r\n    if(currentRoute != \"prijava\" && currentRoute != \"registracija\" && currentRoute != \"\") {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- navBar -->\r\n\r\n<nav *ngIf=\"isLoggedIn() else guest\" class=\"navbar navbar-expand-md navbar-dark bg-custom\">\r\n    <a class=\"navbar-brand mr-auto\" routerLink=\"/my\"><img src=\"../../../../assets/media/icons/stbree_logo_white.png\"\r\n            height=\"53px\" width=\"94px\" alt=\"stbree_logo\"></a>\r\n\r\n    <button class=\"navbar-toggler ml-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\".menu-collapse\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"navbar-collapse collapse w-100 menu-collapse order-0\">\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item mx-auto\">\r\n                <a class=\"nav-link text-light\" routerLink=\"/my\">Pregledna plošča</a>\r\n            </li>\r\n            <li class=\"nav-item mx-auto\">\r\n                <a class=\"nav-link text-light\" routerLink=\"/sporocanje\">Sporočanje</a>\r\n            </li>\r\n            <li class=\"nav-item mx-auto\">\r\n                <a class=\"nav-link text-light\" routerLink=\"/instruktorji\">Inštrukcije</a>\r\n            </li>\r\n            <li class=\"nav-item mx-auto\">\r\n                <a class=\"nav-link text-light\" routerLink=\"/instrukcije-dogodki\">Dogodki</a>\r\n            </li>\r\n            <li class=\"nav-item mx-auto\">\r\n                <a class=\"nav-link text-light\" routerLink=\"/ponudba-del\">Delo</a>\r\n            </li>\r\n            <li class=\"nav-item mx-auto\">\r\n                <div class=\"dropdown show\">\r\n                    <button class=\"btn nav-link btn mx-auto bg-transparent\" role=\"button\" id=\"navbarDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <svg width=\"30px\" height=\"30px\" viewBox=\"0 0 16 16\" class=\"bi bi-person-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M13.468 12.37C12.758 11.226 11.195 10 8 10s-4.757 1.225-5.468 2.37A6.987 6.987 0 0 0 8 15a6.987 6.987 0 0 0 5.468-2.63z\" />\r\n                            <path fill-rule=\"evenodd\" d=\"M8 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                            <path fill-rule=\"evenodd\" d=\"M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8z\" />\r\n                        </svg>\r\n                        {{ getUser() }} \r\n                    </button>\r\n                  \r\n                    <div id=\"dropdown-menu\" class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <a class=\"dropdown-item\" id=\"profileBtn\" style=\"cursor: pointer;\" routerLink=\"/profil/{{getCurrentUserEmail()}}\">Profil</a>\r\n                        <div class=\"dropdown-divider\"></div>\r\n                        <a (click)=\"logout()\" id=\"logout-btn\" class=\"dropdown-item text-danger\" style=\"cursor: pointer;\"><b>Odjava</b></a>\r\n                    </div>\r\n                  </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n\r\n<ng-template #guest>\r\n    <nav id=\"fixing-navbar\" class=\"navbar navbar-expand bg-transparent fixed-top\">\r\n        <a routerLink=\"/\"><img class=\"mr-auto\" src=\"../../../../assets/media/icons/stbree_logo_white.png\" height=\"53px\"\r\n                width=\"94px\"></a>\r\n\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link text-light\" routerLink=\"/prijava\">Prijava</a>\r\n            </li>\r\n            <li class=\"nav-item nav-item-signup\">\r\n                <a class=\"nav-link text-light\" routerLink=\"/registracija\">Registracija</a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n</ng-template>\r\n\r\n\r\n<!-- <script>\r\n    $(window).scroll(function () {\r\n        $('nav').toggleClass('scrolled', $(this).scrollTop() > 50);\r\n    });\r\n</script> -->"],"sourceRoot":"webpack:///"}